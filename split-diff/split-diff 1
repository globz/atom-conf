<?php
if (!isset($_SESSION)) { session_start(); }

//This code handles all the server side queries with the help of q-handler.js

require_once '../auth/mysql_con.php';
require_once '../auth/PasswordHash.php';
require_once '../auth/conf.php';

//Check if user is already online - this function reside in conf.php
isOnline();

//Add connection flag to core.js and console.log
if (!$db){

    echo '<script>console.log("mysql connection failed!"); mysql =false;</script>';

  }

/* List your functions here */

function my_pwqcheck($newpass, $oldpass = '', $name = ''){
	global $use_pwqcheck, $pwqcheck_args;
	if ($use_pwqcheck)
		return pwqcheck($newpass, $oldpass, $name, '', $pwqcheck_args);

/* Some really trivial and obviously-insufficient password strength checks -
 * we ought to use the pwqcheck(1) program instead. */
	$check = '';
	if (strlen($newpass) < 10)
		$check = 'passphrase too short must be 10 characters minimum!';
	else if (stristr($oldpass, $newpass) ||
	    (strlen($oldpass) >= 4 && stristr($newpass, $oldpass)))
		$check = 'is based on the old one';
	else if (stristr($name, $newpass) ||
	    (strlen($name) >= 4 && stristr($newpass, $name)))
		$check = 'is based on the username';
	if ($check)
		return "Bad password ($check)";
	return 'OK';
}

/* End of functions listing */


/* List queries variables here */
 $query         = isset($_POST['query']) ? $_POST['query'] : '';#The $query is in charge of enabling an if statements
 $name          = isset($_POST['name']) ? $_POST['name'] : ''; #Declare $name (Full username)
 $email         = isset($_POST['email']) ? $_POST['email'] : ''; #Declare $email (User email)
 $pass          = isset($_POST['pass']) ? $_POST['pass'] : ''; #Declare $pass (User password)
 $terrfilter    = isset($_POST['terrfilter']) ? $_POST['terrfilter'] : ''; #Declare $terrfilter (Territory filter for rep)
 $terrfilter2   = isset($_POST['terrfilter2']) ? $_POST['terrfilter2'] : ''; #Declare $terrfilter2 (Territory filter #2 for rep)
 $admin_panel   = isset($_POST['admin_panel']) ? $_POST['admin_panel'] : ''; #Declare $admin_panel (sent from Admin panel? yes/no) #used by #deletefav & #addfav & confirm-favorite
 $make_admin    = isset($_POST['make_admin']) ? $_POST['make_admin'] : ''; #Declare $make_admin (Set new user as Admin? yes/no) used by #adduser
 $motd_date     = date('Y/m/d'); #MOTD date
 $motd          = isset($_POST['motd']) ? $_POST['motd'] : ''; #Declare $motd (Message of the day)
 $pinned        = isset($_POST['pinned']) ? $_POST['pinned'] : ''; #Declare $pinned (Importance flag of MOTD)
 $postby        = $_SESSION['alive'][1];     #who updated the MOTD?
 $unpinid       = isset($_POST['unpinid']) ? $_POST['unpinid'] : ''; #Declare $unpinid (unpid id - motd)
 $deleteid      = isset($_POST['deleteid']) ? $_POST['deleteid'] : ''; #Declare $deleteid (deleteid - motd)
 $search        = isset($_POST['search']) ? $_POST['search'] : ''; #Declare  $search (search query)
 $view          = isset($_POST['view']) ? $_POST['view'] : ''; #Declare $view (Display view user toggle for search settings)
 $client        = isset($_POST['client']) ? $_POST['client'] : ''; #Declare $client (Holds the client account number when the user select a client)
 $ulink         = isset($_POST['ulink']) ? $_POST['ulink'] : ''; #Declare $ulink (Holds the universal link for a given client (phone number/CDTELN))
 $favname       = isset($_POST['favname']) ? $_POST['favname'] : ''; #Declare $favname  (Name of the favorites created by the user)
 $favuid        = isset($_POST['favuid']) ? $_POST['favuid'] : ''; #Declare  $favuid  (Fav unique id for deletion via the modify user menu (Admin))
 $agreement     = isset($_POST['agreement']) ? $_POST['agreement'] : ''; #Declare  $agreement (Agreement number)
 $products      = isset($_POST['products']) ? $_POST['products'] : ''; #Declare  $products (Contains all item numbers of a given order)
 $unit_qty      = isset($_POST['unit_qty']) ? $_POST['unit_qty'] : ''; #Declare  $unit_qty  (Contains all quantity of item numbers for a given order)
 $total_qty     = isset($_POST['total_qty']) ? $_POST['total_qty'] : ''; #Declare $total_qty  (Contains total quantity of item numbers for a given order)
 $unit_price    = isset($_POST['unit_price']) ? $_POST['unit_price'] : '';#Declare $unit_price  (Contains all unit prices for a given order)
 $total_price   = isset($_POST['total_price']) ? $_POST['total_price'] : '';#Declare $total_price  (Contains total price for a given order)
 $agr_name      = isset($_POST['agreement_name']) ? $_POST['agreement_name'] : ''; #Declare $agr_name (Contains the agreement name from a given order)
 $agr_route     = isset($_POST['agreement_route']) ? $_POST['agreement_route'] : ''; #Declare $agr_route (Contains the agreement route from a given order)
 $client_num    = isset($_POST['client_num']) ? $_POST['client_num'] : ''; #Declare $client_num (Contains the client number selected by the user)
 $comment       = isset($_POST['comment']) ? $_POST['comment'] : ''; #Declare $comment (Comment left by the user for a given order)
 $PO            = isset($_POST['PO']) ? $_POST['PO'] : ''; #Declare $PO (used for naming our files)
 $CC            = isset($_POST['CC']) ? $_POST['CC'] : ''; #Declare $CC (CC recipient)
 $order_date    = isset($_POST['order_date']) ? $_POST['order_date'] : ''; #Declare $order_date (order date (needed for keeping a log of our transaction inside orders database))
 $delete_flag   = isset($_POST['delete_flag']) ? $_POST['delete_flag'] : ''; #Declare $delete_flag (This flag is used when a user cancel an order sheet (delete the HTML order))
 $OC_date       = isset($_POST['oc_date']) ? $_POST['oc_date'] : ''; #Declare $OC_date (Date needed to display orders by date (Order center))
 $iREP_po       = isset($_POST['irep_po']) ? $_POST['irep_po'] : ''; #Declare $iREP_po (iREP PO# which we use to link with the order number from AS400 (Order center))
 $order_num_1   = isset($_POST['order_num_1']) ? $_POST['order_num_1'] : ''; #Declare $order_num_1 (Main order number from AS400 which we use to link with iREP PO# and all extra order_num fields (Order center))
 $po_supplier   = isset($_POST['po_supplier']) ? $_POST['po_supplier'] : ''; #Declare $po_supplier (PO# supplier from AS400 which we use to link with iREP PO# (Order center))
 $chk_orders    = isset($_POST['chk_orders']) ? $_POST['chk_orders'] : ''; #Declare $chk_orders (This var contains all checked orders (Order center))
 $fetch_this_po = isset($_POST['fetch_this_po']) ? $_POST['fetch_this_po'] : ''; #Declare $fetch_this_po (This var contains the current_po_pointer to fetch out a PO# (cycle) (Order center))
 $store_this_po = isset($_POST['store_this_po']) ? $_POST['store_this_po'] : ''; #Declare $store_this_po (This var contains the current_po_pointer to store a PO# (cycle) (Order center))
 $route_id      = isset($_POST['route_id']) ? $_POST['route_id'] : ''; #Declare $route_id (This var contains the selected route id which tells us which route to activate (Admin Tools/Transactional Route))

 //The variable below are only used by permission_check(); -- q-handler.php has no use for them
 $display = isset($_POST['display']) ? $_POST['display'] : ''; #display is in charge of enabling an if statements for UI and Navigation (it is only used by permission_check() on this page)


if (empty($view)) {
    //if no view settings has been set then set default view to 2 (much better view than 1)
    $_SESSION['settings'] = 2;
  }
  else{
    //if view settings has been set then update the our php session
    $_SESSION['settings'] = $view;
  }

   $hasher   = new PasswordHash($hash_cost_log2, $hash_portable); //Declare $hasher

   //Permission_check(); handles the security access to display/queries (q-handler,ui-handler)
   //This function is catching ALL actions based on $query, the logic is handled inside auth/conf.php
   //Each time a new $query is created it must be added to conf.php
   $domain_origin =  permission_check($display,$query,$permission,$whitelisted_domains,$admin_panel);

/* End of queries variables listing */


////////////////////////////////////////////////////////////
/* query::adduser */
/* New user creation */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'adduser'){

  /* match any word with unicode support enabled  */
if (!preg_match('/\p{L}+/u', $name)){
	fail('Nom ou prenom invalide'); }

//If email does not match the criteria below, exit and notify
//Whitelisted domains are listed inside conf.php
if (!preg_match($whitelisted_domains, $email)){

    fail('Email invalide!');
}

  //MAKE SURE THE EMAIL ADDRESS DOESN'T HAVE ANY NASTY STUFF IN IT
$pattern = "/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i";
 if (preg_match($pattern, trim(strip_tags($email)))) {
    $clean_email = trim(strip_tags($email));
    } else {
    fail('Email invalide!');
    }


   /* Don't let them spend more of our CPU time than we were willing to.
 * Besides, bcrypt happens to use the first 72 characters only anyway. */
if (strlen($pass) > 36){
	fail('Mot de passe trop long');}
if (!preg_match('/^[\w()!=@#+?]{10,35}$/', $pass)){ #Passphrase length is 10 min 35 max, allowed characters [:alnum:] ()!=@#+?
	fail('Mot de passe invalide');}

    if (($check = my_pwqcheck($pass, '', $name)) !== 'OK'){ #Check if password & user meet the requirements
		fail($check);}

    $hash = $hasher->HashPassword($pass);
	if (strlen($hash) < 20)
		fail('Failed to hash new password');
	unset($hasher);

   #Creating the user and storing the information inside our database
	($stmt = $db->prepare('insert into users (email,pwd,name,isAdmin,terrfilter,terrfilter2) values (?,?,?,?,?,?)'))
		|| fail('MySQL prepare', $db->error);
	$stmt->bind_param('ssssss', $email,$hash,$name,$make_admin,$terrfilter,$terrfilter2)
		|| fail('MySQL bind_param', $db->error);
	  if (!$stmt->execute()) {
		if ($db->errno === 1062 /* ER_DUP_ENTRY */)
			fail('This name is already taken!');
		else
			fail('MySQL execute', $db->error);
	}

    $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Création terminée!</p></center>';

    echo "<script>iREPNotify('$notification','info');</script>";

$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::changepwd */
/* Change user password */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'changepwd'){

    //MAKE SURE THE EMAIL ADDRESS DOESN'T HAVE ANY NASTY STUFF IN IT
$pattern = "/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i";
 if (preg_match($pattern, trim(strip_tags($email)))) {
    $clean_email = trim(strip_tags($email));
    } else {
    fail('Email invalide!');
    }

   /* Don't let them spend more of our CPU time than we were willing to.
 * Besides, bcrypt happens to use the first 72 characters only anyway. */
if (strlen($pass) > 36){
	fail('Mot de passe trop long');}
if (!preg_match('/^[\w()!=@#+?]{10,35}$/', $pass)){ #Passphrase length is 10 min 35 max, allowed characters [:alnum:] ()!=@#+?
	fail('Mot de passe invalide');}


    $hash = $hasher->HashPassword($pass);
		if (strlen($hash) < 20)
			fail('Failed to hash new password');
		unset($hasher);

		($stmt = $db->prepare('update users set pwd=? where email=?')) #update new passphrase
			|| fail('MySQL prepare', $db->error);
		$stmt->bind_param('ss', $hash, $email)
			|| fail('MySQL bind', $db->error);
		$stmt->execute()
			|| fail('MySQL execute', $db->error);


    $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Changement du mot de passe terminé!</p></center>';

    echo "<script>iREPNotify('$notification','info');</script>";


$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::changeterritory */
/* Change user territories filters  */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'changeterritory'){

//MAKE SURE THE EMAIL ADDRESS DOESN'T HAVE ANY NASTY STUFF IN IT
$pattern = "/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i";
 if (preg_match($pattern, trim(strip_tags($email)))) {
    $clean_email = trim(strip_tags($email));
    } else {
    fail('Email invalide!');
    }




		($stmt = $db->prepare('update users set terrfilter=?, terrfilter2=? where email=?')) #update territories filters
			|| fail('MySQL prepare', $db->error);
		$stmt->bind_param('sss', $terrfilter,$terrfilter2,$email)
			|| fail('MySQL bind', $db->error);
		$stmt->execute()
			|| fail('MySQL execute', $db->error);


    $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Mise à jour des filtres territoires pour l\\\'usager '.$email.' terminée!</p></center>';

    echo "<script>iREPNotify('$notification','info');</script>";


$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::deletefav */
/* Remove user favorites from database */
/* Favorites can also be removed from admin panel */
/* Must be admin and part of the permission array if sent from Admin Panel */
////////////////////////////////////////////////////////////

if($query === 'deletefav'){


  //if $admin_panel is not yes then it has been set to no and the deletion query has been initiated by the user
  if ($admin_panel !='yes'){
  $email = $_SESSION['alive'][2]; //lets use the user email, because we do not want to read from the email input by the Admin (we are not reading from POST)
  }

  //If email does not match the criteria below, exit and notify
  //Whitelisted domains are listed inside conf.php
  if (!preg_match($whitelisted_domains, $email)){

      fail('Email invalide!');
  }


    //MAKE SURE THE EMAIL ADDRESS DOESN'T HAVE ANY NASTY STUFF IN IT
$pattern = "/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i";
 if (preg_match($pattern, trim(strip_tags($email)))) {
    $clean_email = trim(strip_tags($email));
    } else {
    fail('Email invalide!');
    }

      //check if fav uid is not empty
       if ($favuid ==''){

         fail('fav uid invalide!');

       }

       #Check if favuid actually exist in the database
      ($stmt = $db->prepare('select ID from favorites where ID=?'))
           || fail('MySQL prepare', $db->error);
          $stmt->bind_param('s', $favuid)
           || fail('MySQL bind_param', $db->error);
          $stmt->execute()
           || fail('MySQL execute', $db->error);
          $stmt->bind_result($favuid_exist)
           || fail('MySQL bind_result', $db->error);
          if (!$stmt->fetch() && $db->errno)
              fail('MySQL fetch', $db->error);
          $stmt->fetch();

      //IF favuid does not exist then fail and alert the user
       if ($favuid_exist == 0){

         fail('fav uid invalide!');

       }

       #Delete selected favuid
       ($stmt = $db->prepare('delete from favorites where ID=? AND email=?')) #delete fav
			|| fail('MySQL prepare', $db->error);
		    $stmt->bind_param('ss', $favuid,$email)
			|| fail('MySQL bind', $db->error);
		    $stmt->execute()
			|| fail('MySQL execute', $db->error);


       if ($admin_panel !='yes'){

        $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Suppression du favori #'.$favuid.' terminée!</p></center>';

        echo "<script>iREPNotify('$notification','info');$('i#favlookup').click();</script>";
      }
      else{

        $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Suppression du favori #'.$favuid.' pour l\\\'usager '.$email.' terminée!</p></center>';

        echo "<script>iREPNotify('$notification','info');</script>";
   }

$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::enabledisableusr */
/* Enable/Disable user */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'enabledisableusr'){

    //MAKE SURE THE EMAIL ADDRESS DOESN'T HAVE ANY NASTY STUFF IN IT
$pattern = "/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i";
 if (preg_match($pattern, trim(strip_tags($email)))) {
    $clean_email = trim(strip_tags($email));
    } else {
    fail('Email invalide!');
    }


		#Check if the user is currently disable or enabled
	 ($stmt = $db->prepare('select enabled from users where email=?'))
				|| fail('MySQL prepare', $db->error);
			 $stmt->bind_param('s', $email)
				|| fail('MySQL bind_param', $db->error);
			 $stmt->execute()
				|| fail('MySQL execute', $db->error);
			 $stmt->bind_result($enabled)
				|| fail('MySQL bind_result', $db->error);
	     if (!$stmt->fetch() && $db->errno)
					 fail('MySQL fetch', $db->error);
			 $stmt->fetch();

       //If the user is enabled then disable the account
			if ($enabled =='Oui'){

					$switch_account_status ='Non';

				($stmt = $db->prepare('update users set enabled=? where email=?')) #update account state
					|| fail('MySQL prepare', $db->error);
				$stmt->bind_param('ss',$switch_account_status,$email)
					|| fail('MySQL bind', $db->error);
				$stmt->execute()
					|| fail('MySQL execute', $db->error);

					    $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">L\\\'usager '.$email.' est maintenant désactivé!</p></center>';

              echo "<script>iREPNotify('$notification','info');</script>";
			}

			//If the user is disabled then enable the account
	 	if ($enabled =='Non'){

	 			$switch_account_status ='Oui';

	 		($stmt = $db->prepare('update users set enabled=? where email=?')) #update account state
	 			|| fail('MySQL prepare', $db->error);
	 		$stmt->bind_param('ss',$switch_account_status,$email)
	 			|| fail('MySQL bind', $db->error);
	 		$stmt->execute()
	 			|| fail('MySQL execute', $db->error);

				  $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">L\\\'usager '.$email.' est maintenant activé!</p></center>';

            echo "<script>iREPNotify('$notification','info');</script>";
	 	}

  $stmt->close();
  $db->close();

}


////////////////////////////////////////////////////////////
/* query::motd */
/* Update MOTD */
/* & Set MOTD importance (pinned) */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'motd'){

    if (empty($motd)) {fail('Message invalide!');}

    #Store the new motd inside our database
	($stmt = $db->prepare('insert into motd (date,motd,pinned,postby) values (?,?,?,?)'))
		|| fail('MySQL prepare', $db->error);
	$stmt->bind_param('ssss', $motd_date,$motd,$pinned,$postby)
		|| fail('MySQL bind_param', $db->error);
	if (!$stmt->execute()) {
		if ($db->errno === 1062 /* ER_DUP_ENTRY */)
			fail('erreur...');
		else
			fail('MySQL execute', $db->error);
	}

    $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Création et publication de la mises à jour terminée!</p></center>';

    echo "<script>iREPNotify('$notification','info');</script>";

$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::unpin*/
/* Change MOTD importance  */
/* pin or unpin MOTD */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'unpin'){

     #Pull out pin state for a given id
    ($stmt = $db->prepare('select pinned from motd where id=?'))
	       || fail('MySQL prepare', $db->error);
        $stmt->bind_param('s', $unpinid)
	       || fail('MySQL bind_param', $db->error);
	$stmt->execute()
	       || fail('MySQL execute', $db->error);
	$stmt->bind_result($pin_state)
	       || fail('MySQL bind_result', $db->error);
	if (!$stmt->fetch() && $db->errno)
		        fail('MySQL fetch', $db->error);
        $stmt->fetch();

  //Change pin_state = if pinned then unpin if not pinned then pin!
 if ($pin_state !='Oui'){$pin_state ='Oui';}else{$pin_state ='Non';}

 if ($unpinid ==''){ fail('id du message invalide!');} //check if message id is not empty

    ($stmt = $db->prepare('update motd set pinned=? where id=?')) #update pin_state
			|| fail('MySQL prepare', $db->error);
		$stmt->bind_param('ss', $pin_state, $unpinid)
			|| fail('MySQL bind', $db->error);
		$stmt->execute()
			|| fail('MySQL execute', $db->error);

    $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">L\\\'importance du message à été modifié!</p></center>';

    echo "<script>iREPNotify('$notification','info');</script>";

$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::deletemotd*/
/* Delete MOTD  */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'deletemotd'){

     if ($deleteid ==''){ fail('id du message invalide!');} //check if message id is not empty

       #Delete selected id
       ($stmt = $db->prepare('delete from motd where id=?')) #update pin_state
			|| fail('MySQL prepare', $db->error);
		$stmt->bind_param('s', $deleteid)
			|| fail('MySQL bind', $db->error);
		$stmt->execute()
			|| fail('MySQL execute', $db->error);

    $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Le message à été supprimé!</p></center>';

    echo "<script>iREPNotify('$notification','info');</script>";

$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::test-odbc*/
/* Admin tools : odbc connection test */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'test-odbc'){

  //If user domain origin is NOT johnvince then deny access to this menu
  if ($domain_origin !='@johnvince.com'){
      fail('Privilege insuffisant!');
  }


try {

  $iseries = new PDO('odbc:iseries'); // Note: The name is the same as what’s in our square brackets in ODBC.ini

} catch (PDOException $exception) {

  $exception->getMessage();
  $notification = '<center><span class="step size-48"><i class="ion-thumbsdown"></i></span><br><p>La connexion ODBC ne fonctionne pas!</p></center>';

  echo "<script>iREPNotify('$notification','error');</script>";
  exit;

}

if (!isset($exception)) {

   $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">La connexion ODBC fonctionne!</p></center>';

   echo "<script>iREPNotify('$notification','info');</script>";
}

   unset($iseries);

}


////////////////////////////////////////////////////////////
/* query::check-user-details*/
/* Admin tools : Check user details  */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'check-user-details'){

  //If user domain origin is NOT johnvince then deny access to this menu
  if ($domain_origin !='@johnvince.com'){
      fail('Privilege insuffisant!');
  }

		    //MAKE SURE THE EMAIL ADDRESS DOESN'T HAVE ANY NASTY STUFF IN IT
		$pattern = "/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i";
		 if (preg_match($pattern, trim(strip_tags($email)))) {
		    $clean_email = trim(strip_tags($email));
		    } else {
		    fail('Email invalide!');
		    }

		#Pull out user details from a given email
	 ($stmt = $db->prepare('select name,id,isAdmin,terrfilter,terrfilter2,enabled from users where email=?'))
				|| fail('MySQL prepare', $db->error);
			 $stmt->bind_param('s', $email)
				|| fail('MySQL bind_param', $db->error);
       $stmt->execute()
				|| fail('MySQL execute', $db->error);
       $stmt->bind_result($name,$id,$isAdmin,$terrfilter,$terrfilter2,$enabled)
				|| fail('MySQL bind_result', $db->error);
  if (!$stmt->fetch() && $db->errno)
					 fail('MySQL fetch', $db->error);
			 $stmt->fetch();

    //Display user details
    $notification = '<span class="step size-48"><i class="ion-thumbsup"></i></span>';
    echo "<script>iREPNotify('$notification','info');</script>";

    echo "<br>
          <p class='bg-primary' id='user-details'>
		      Nom: <code>$name</code><br>
          ID:  <code>$id</code><br>
					Actif: <code>$enabled</code><br>
					Admin: <code>$isAdmin</code><br>
					Territoire: <code>$terrfilter</code><br>
          Territoire #2: <code>$terrfilter2</code><br>
		      </p>";


  $stmt->close();
  $db->close();

}


////////////////////////////////////////////////////////////
/* query::maintenance*/
/* Admin tools : Maintenance ON/OFF */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'maintenance'){

  //If user domain origin is NOT johnvince then deny access to this menu
  if ($domain_origin !='@johnvince.com'){
      fail('Privilege insuffisant!');
  }

  //Reading the current maintenance state from config.ini
  $config             = parse_ini_file('/var/www/config.ini');
  $maintenance        = $config['maintenance'];

 //Set the opposite maintenance state of the current maintenance state
  if ($maintenance == 0){

      $maintenance_state = 'maintenance = 1';
      $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Mode maintenance activé!</p></center>';
      $update_display_circle = '<script>$("div.circle").attr("class", "circle green"); $("div.circle").text("ON");</script>';

  } else {

     $maintenance_state = 'maintenance = 0';
     $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Mode maintenance désactivé!</p></center>';
     $update_display_circle = '<script>$("div.circle").attr("class", "circle red"); $("div.circle").text("OFF");</script>';

}
  //Update config.ini with our new maintenance state and create a backup copy before editing
  $key='maintenance';
  system("sed  -i.bak  's/\({$key} =\)\(.*\)/{$maintenance_state}/' /var/www/config.ini");
  //Display new settings notification to user
  echo "<script>iREPNotify('$notification','info');</script>";
  echo $update_display_circle;

}


////////////////////////////////////////////////////////////
/* query::route-search*/
/* Admin::Tools::Transactional route   */
/* Display current route for a given contract price  */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'route-search'){

   //If user domain origin is NOT johnvince then deny access to this menu
   if ($domain_origin !='@johnvince.com'){
       fail('Privilege insuffisant!');
   }

   echo ' <div class="bs-example" style="margin-top:50px"><table class="table table-striped">';
   echo '<thead><tr><th>Contrat #</th><th>Description</th><th>Route_Flag</th><th>Manual/GP1070</th></tr></thead><tbody>';


   $search = $db->real_escape_string($search); #Escapes special characters in a string for use in an SQL statement
   $param = "%".$search."%";	//Add wildcards to our search query - default search


        ($stmt = $db->prepare('select AHNUM,AHDSC1,ROUTE_FLAG from aghdr where AHNUM LIKE ? OR AHDSC1 LIKE ? OR ROUTE_FLAG LIKE ? LIMIT 0,500'))
            || fail('MySQL prepare', $db->error);
         $stmt->bind_param('sss', $param,$param,$param)
            || fail('MySQL bind_param', $db->error);
         $stmt->execute()
            || fail('MySQL execute', $db->error);
         $stmt->bind_result($AHNUM,$AHDSC1,$ROUTE_FLAG)
            || fail('MySQL bind_result', $db->error);

        while($stmt->fetch()){

          if ($ROUTE_FLAG =='MANUAL'){

              $activate_route_button = '<abbr title="Appuyer pour changer le route_flag de Manual -> GP1070"><sub><button class ="'.$AHNUM.'" id="activate_GP1070_route">
                                        <i class="ion-android-hand size-24"></i></button></sub></abbr>';


          }else{

              $activate_route_button = '<abbr title="Appuyer pour changer le route_flag de GP1070 -> Manual"><sub><button class ="'.$AHNUM.'"  id="activate_MANUAL_route">
                                        <i class="ion-android-desktop size-24"></i></button></sub></abbr>';


          }

          echo"
          	  <tr>
              <td>$AHNUM</td>
              <td>$AHDSC1</td>
              <td id='$AHNUM'>$ROUTE_FLAG</td>
              <td>$activate_route_button</td>
              </tr>

             ";

        }

        echo '</tbody></table></div>';

    $stmt->close();
    $db->close();
}


////////////////////////////////////////////////////////////
/* query::route-handler*/
/* Admin::Tools::Transactional route   */
/* Update route_flag for a given contract price  */
/* Must be admin and part of the permission array  */
////////////////////////////////////////////////////////////

if($query === 'route-handler'){

    if ($route_id =='activate_GP1070_route'){

        $activate_this_route = 'GP1070';

    }elseif ($route_id =='activate_MANUAL_route') {

        $activate_this_route = 'MANUAL';

    }

    ($stmt = $db->prepare('update aghdr set ROUTE_FLAG=? where AHNUM=?')) #update pin_state
			|| fail('MySQL prepare', $db->error);
		$stmt->bind_param('ss', $activate_this_route, $agreement)
			|| fail('MySQL bind', $db->error);
		$stmt->execute()
			|| fail('MySQL execute', $db->error);

    //We are passing this notification back to q-handler.js as 'data' variable for iREPNotify
    echo $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">'.$agreement.' utilise maintenant la route '.$activate_this_route.'</p></center>';

    $stmt->close();
    $db->close();

}


////////////////////////////////////////////////////////////
/* query::customer-search */
/* origin :: q-handler.js */
/* event handler :: #customer-search */
/* Display search results to the customer search interface */
////////////////////////////////////////////////////////////

if($query === 'customer-search'){

//if search query is not empty execute the query
if (!empty($search)) {

    $link = mysql_connect("localhost", "webuser", "d90zf2A!013sd83Mf26");
		mysql_set_charset('utf8',$link); #This only need because we do not use mysqli for now (UTF-8 charset has been set in auth/mysql_con.php)
    if (!$link) { die("Could not connect: " . mysql_error());}
    mysql_select_db("irep");

$search = $db->real_escape_string($search); #Escapes special characters in a string for use in an SQL statement
$search = htmlspecialchars($search, ENT_QUOTES); #Convert special characters to HTML entities

//if no filters are found do not apply any restriction to search queries
if($_SESSION['alive'][4] =='ALL' && $_SESSION['alive'][5] =='ALL'){

//This query search into our clients db which has been populated from odbc-fetcher.php (All data is from AS400 odbc file transfered to mysql)
//We also filter results by CORACC ='Y' which mean that a client is ACTIVE AND ACCEPTING ORDERS
  $query_customers_db ="SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
                        FROM clients
                        WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%')
                        AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''";

}

//if both filters are set to 404 then it means this user does not have the permissions to search the client database
//This is mostly used for arachides-depot users which access their account via the favorites menu
if($_SESSION['alive'][4] =='404' && $_SESSION['alive'][5] =='404'){

    echo '<script>document.getElementById("data").className = "data-search";</script>';
    //Exit process and display a warning message
	fail('Privilege insuffisant!');
}

 //if only ONE filter is found then apply the FIRST filter
if($_SESSION['alive'][4] !='ALL' && $_SESSION['alive'][5] =='ALL'){

$terrfilter_1 = $_SESSION['alive'][4];

//This query search into our clients db which has been populated from odbc-fetcher.php (All data is from AS400 odbc file transfered to mysql)
  $query_customers_db ="SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
                        FROM clients
                        WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_1' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''";

}


//if TWO filters are found then apply BOTH filters with UNION statement / Execlude all predefined filters (ARD,TJL)
if($_SESSION['alive'][4] !='ALL' && $_SESSION['alive'][5] !='ALL' && $_SESSION['alive'][4] !='TJL' && $_SESSION['alive'][5] !='TJL' && $_SESSION['alive'][4] !='ARD' && $_SESSION['alive'][5] !='ARD'){

$terrfilter_1 = $_SESSION['alive'][4];
$terrfilter_2 = $_SESSION['alive'][5];


//This query search into our clients db which has been populated from odbc-fetcher.php (All data is from AS400 odbc file transfered to mysql)
  $query_customers_db ="SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
                        FROM clients
                        WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_1' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''

               UNION

	                     SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
                       FROM clients
                       WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_2' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''";
}

//If user domain origin is arachides-depot.ca then filter the query for arachides-depot AND
//both territory filters are set to ARD then filter all search queries to select ARD clients only
//This query is used by ARD reps -- Please take note that it should filter by salesgroup "ARD" instead of CREPTN
if ($domain_origin =='@arachides-depot.ca' && $_SESSION['alive'][4] =='ARD' && $_SESSION['alive'][5] =='ARD'){

  //This query search into our clients db which has been populated from odbc-fetcher.php (All data is from AS400 odbc file transfered to mysql)
    $query_customers_db ="SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
                          FROM clients
                          WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CREPTN ='48858' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''";

}

//If user domain origin is jacqueslemieux.com then filter the query for jacqueslemieux.com AND
//if the FIRST filter is set to TJL and SECOND filter is set to TJL
//This is a global Jacques Lemieux Territory filter used for phone orders/JL reps (manager)
//This filter is only useful for a specific use case and gives access to all Jacques Lemieux clients for a single user
if($domain_origin =='@jacqueslemieux.com' && $_SESSION['alive'][4] =='TJL' && $_SESSION['alive'][5] =='TJL'){

//Jacques Lemieux territories filters (Must be updated if territories are removed or added)
$terrfilter_1  = 'BE1';
$terrfilter_2  = 'BS1';
$terrfilter_3  = 'CN1';
$terrfilter_4  = 'GA1';
$terrfilter_5  = 'LS1';
$terrfilter_6  = 'LS2';
$terrfilter_7  = 'NB1';
$terrfilter_8  = 'QU1';
$terrfilter_9  = 'RS1';
$terrfilter_10 = 'SA1';



//This query search into our clients db which has been populated from odbc-fetcher.php (All data is from AS400 odbc file transfered to mysql)
//We also filter results by CORACC ='Y' which mean that a client is ACTIVE AND ACCEPTING ORDERS
  $query_customers_db ="SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
           FROM clients
           WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV LIKE '%$search%' OR CPOSTZP LIKE '%$search%')
					 AND CDTERR ='$terrfilter_1' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''

					 UNION

					 SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
					 FROM clients
					 WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_2' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''

					 UNION

					 SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
					 FROM clients
					 WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_3' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''

					 UNION

					 SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
					 FROM clients
					 WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_4' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''

					 UNION

					 SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
					 FROM clients
					 WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_5' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''

					 UNION

					 SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
					 FROM clients
					 WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_6' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''

					 UNION

					 SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
					 FROM clients
					 WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_7' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''

					 UNION

					 SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
					 FROM clients
					 WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_8' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''

					 UNION

					 SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
					 FROM clients
					 WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_9' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''

					 UNION

					 SELECT CUSTNO,CNAME,CADD2,CDAREA,CDTELN,CTYPRV,CPOSTZP
					 FROM clients
					 WHERE (CUSTNO = '$search' OR CNAME LIKE '%$search%' OR CADD2 LIKE '%$search%' OR CDTELN LIKE '%$search%' OR CTYPRV Like '%$search%' OR CPOSTZP LIKE '%$search%') AND CDTERR ='$terrfilter_10' AND CORACC='Y' AND C2STAT !='S' AND CREPTN !=''";
}

$result = mysql_query($query_customers_db) or die( mysql_error() );

$view = $_SESSION['settings']; //user view settings

//Display view
if ($view == 1 ){
    $max_r =0;//initial max results value
    while($row = mysql_fetch_array($result)) {
        $row[4] = substr_replace($row[4], '-', 3, 0); //Add dash to phone number ie; 3496422 -> 349-6422
        ++$max_r; //Count results per queries

         $town = explode(",", $row[5]); //Lets explode our town string and get the first block only

    echo '<div class="col-sm-5 bs-example"><table class="table table-hover">';
    echo '<thead><tr><th><i class="ion-pound"></i> <button type="button" id="find-customer-accounts" class="btn btn-info find-customer-accounts" value="'.$row[0].'">'. $row[0] . '</button></th></tr></thead>';
    echo '<tbody><tr><td><code>Client:</code> '. $row[1] . "</td></tr>";
    echo '<tr><td><code>Adresse:</code> '. $row[2] . "</td></tr>";
    echo '<tr><td><code>Téléphone:</code> '.'('.$row[3].') '. $row[4] . "</td></tr>";
    echo '<tr><td><code>Ville:</code> '. $town[0] . "</td></tr>";
    echo '<tr><td><code>Code postal:</code> '. $row[6] . "</td></tr>";
    echo '</tbody></table></div>';

   }
}

//Alternate display view (#2) (default)
if ($view == 2 ){
     echo ' <div class="bs-example"><table class="table table-striped">';
     echo '<thead><tr><th>#</th><th>Client</th><th>Adresse</th><th>Téléphone</th><th>Ville</th><th>Code postal</th></tr></thead><tbody>';
    $max_r =0;//initial max results value
    while($row = mysql_fetch_array($result)) {
        $row[4] = substr_replace($row[4], '-', 3, 0); //Add dash to phone number ie; 3496422 -> 349-6422
        ++$max_r; //Count results per queries

         $town = explode(",", $row[5]); //Lets explode our town string and get the first block only

    echo '<tr><td><button type="button" id="find-customer-accounts" class="btn btn-info find-customer-accounts" value="'.$row[0].'">'. $row[0] . '</button></td>';
    echo '<td><code>'. $row[1] . '</code></td>';
    echo '<td><code>'. $row[2] . '</code></td>';
    echo '<td><code>'.'('.$row[3].') '. $row[4] . '</code></td>';
    echo '<td><code>'. $town[0] . '</code></td>';
    echo '<td><code>'. $row[6] . '</code></td></tr>';

  }

 echo '</tbody></table></div>';
}

//return the the amount of results found
//if value is empty then append (0)
echo '<label class="search-term"><i class="ion-person-stalker"></i> ' .$search. '<code id="max_r">('. $max_r .')</code><i class="ion-document"></i></label>';
echo '<input type="hidden" id="x" value="'.$max_r.'"/>
 <script>
document.getElementById("data").className = "data-search";
ipad_alternate_view(\'selected-agreement\');
irep_theme();
 </script>
';

mysql_free_result($result);
mysql_close($link);

 }
}


////////////////////////////////////////////////////////////
/* query::find-customer-accounts */

/* origin :: ui-handler.js */
/* event handler :: #find-customer-accounts */

/* origin :: ui-handler.js */
/* event handler :: #back-to-customer */

/* origin :: q-handler.js */
/* event handler :: i#ulink */

/* Display all accounts of a given client from the customer-search results
/* & do the same for FAVORITES selection */

/* dependancy to ui-handler.php - display::find-customer-accounts */
/* Display the main NAV bar : lets you go back to query::customer-search */
////////////////////////////////////////////////////////////

if($query === 'find-customer-accounts'){

	//If universal link is NOT empty then retrieve $CDAREA & $CDTELN
 //TO DO: Sanitize $ulink
    if ($ulink !=''){

        $ulink  =  str_split($ulink, 1); //split universal link in 10 string
        $CDAREA =  $ulink[0]. $ulink[1]. $ulink[2]; //create CDAREA
        $CDTELN =  $ulink[3]. $ulink[4]. $ulink[5].$ulink[6].$ulink[7].$ulink[8].$ulink[9]; //create CDTELN

    }

   //The client wasn't access by user favorites so lets find his ulink
   if (!isset($CDAREA) && !isset($CDTELN)){
   #Pull out the unique identifier (universal link)
   #The unique identifier of a specific client which link all accounts is the phone number
    ($stmt = $db->prepare('select CDAREA,CDTELN from clients where CUSTNO=?'))
	       || fail('MySQL prepare', $db->error);
        $stmt->bind_param('s', $client)
	       || fail('MySQL bind_param', $db->error);
	$stmt->execute()
	       || fail('MySQL execute', $db->error);
	$stmt->bind_result($CDAREA,$CDTELN)
	       || fail('MySQL bind_result', $db->error);
	if (!$stmt->fetch() && $db->errno)
		        fail('MySQL fetch', $db->error);
        $stmt->fetch();

   }


    $universal_link = $CDAREA.$CDTELN; //Creating the universal_link if the user wish to add this client to his favorites
   	$email = $_SESSION['alive'][2]; //user email

    #Check the database if this client is already a favorite for this particular user
    ($stmt = $db->prepare('select favname from favorites where ulink=? AND email=?  LIMIT 1'))
	       || fail('MySQL prepare', $db->error);
        $stmt->bind_param('ss', $universal_link,$email)
	       || fail('MySQL bind_param', $db->error);
	$stmt->execute()
	       || fail('MySQL execute', $db->error);
	$stmt->bind_result($is_it_my_favorite)
	       || fail('MySQL bind_result', $db->error);
	if (!$stmt->fetch() && $db->errno)
		        fail('MySQL fetch', $db->error);
        $stmt->fetch();

 if ($is_it_my_favorite !=''){
  //This client is already a favorite
 echo '<div class="fav-header"><span class="step size-32"><i class="ion-checkmark"></i><i class="ion-folder"></i></span></div>';

 }else{
  //This client is not a favorite
 echo '<div class="fav-header" id="add-favorite">Ajouter ce client aux favoris <span class="step size-48"><i class="ion-android-star-outline"></i></span></div>';

 }

###Filters###
$CORRAC ='Y'; //This is needed to always display ACTIVE CLIENTS WHICH ACCEPT ORDERS
$CREPTN_EMPTY =''; //This filter is used to select clients with valid CREPTN ONLY (Default value is empty if no CREPTN found)

#Pull out ALL accounts number related to a given customer and their appropriate REPORTTO accounts with a LEFT JOIN statement (because some accounts are not tied to a REPORTTO or else INNER JOIN would work)
#The unique identifier of a specific client which link all accounts is the phone number
($stmt = $db->prepare('SELECT clients.CUSTNO, clients.CNAME, clients.CADD2, clients.CDAREA, clients.CDTELN, clients.CTYPRV,
                              clients.CPOSTZP, clients.CREPTN, clients.LAST_ORDER, clients.LAST_PO, aghdr.AHDSC1, aghdr.ROUTE_FLAG
           FROM `clients`
           LEFT JOIN `aghdr` on clients.CREPTN = aghdr.AHNUM where clients.CDAREA=? AND clients.CDTELN=? AND clients.CORACC =? AND clients.CREPTN !=?'))
	       || fail('MySQL prepare', $db->error);
    $stmt->bind_param('ssss', $CDAREA,$CDTELN,$CORRAC,$CREPTN_EMPTY)
	       || fail('MySQL bind_param', $db->error);
	$stmt->execute()
	       || fail('MySQL execute', $db->error);
	$stmt->bind_result($CUSTNO,$CNAME,$CADD2,$CDAREA,$CDTELN,$CTYPRV,$CPOSTZP,$CREPTN,$LAST_ORDER,$LAST_PO,$AGREEMENT_NAME,$AGREEMENT_ROUTE)
	       || fail('MySQL bind_result', $db->error);

      while($stmt->fetch()){

      //Get our $base_url from url_handler();
      //url_handler(); reside inside conf.php
      $base_url = url_handler();

      //Get $year_folder so we can link each LAST_ORDER to their respective year folder
			list($year_folder, $month, $day) = split('-', $LAST_ORDER);

		  //No LAST_ORDER found
		  if ($LAST_ORDER == '0000-00-00'){

        $LAST_ORDER ='<i id="last_order_none">Dernière commande: Aucune</i>';

      }
		   else {

				$LAST_ORDER = '<i id="last_order">Dernière commande: <a target="_blank" href="'.$base_url.'/orders/'.$year_folder.'/'.$LAST_PO.'.pdf">'.$LAST_ORDER.'</a></i>
				<span id="client-orders-history" class="step size-24" name="'.$CUSTNO.'"><i class="ion-clipboard"></i></span>';

			 }

        $CDTELN = substr_replace($CDTELN, '-', 3, 0); //Add dash to phone number ie; 3496422 -> 349-6422

				/*
				  This small patch handles a specific "fuck-up" while creating REPORTTO account
					The "fuck-up" in question is related to REPORTTO Accounts (CREPTN) not having
					their equivalent (AHNUM) inside agreement details. Example (CREPTN) 60172 does not have
					an (AHNUM) which match 60172, in this case the (AHNUM) tied to it is 59888.
					This should NEVER happen but with this small patch we will take care of it.

					Simply add the fuck-up (CREPTN) and input a name to it so we can display the agreement name properly
					and process all the remaining functions relying on this piece of data
				*/

				 if ($CREPTN == 60172){ $AGREEMENT_NAME ='IGA ZONE BONBONS';}

         //trim whitespace
         $AGREEMENT_NAME = trim($AGREEMENT_NAME);
         $AGREEMENT_ROUTE = trim($AGREEMENT_ROUTE);
         $CREPTN  = trim($CREPTN);
         $CNAME   = trim($CNAME);
         $CADD2   = trim($CADD2);
         $CDAREA  = trim($CDAREA);
         $CDTELN  = trim($CDTELN);
         $CTYPRV  = trim($CTYPRV);
         $CPOSTZP = trim($CPOSTZP);


echo "
<input type='hidden' id='universal-link' value='$universal_link'/>
<div class='panel panel-primary col-sm-6'>
<div class='panel-heading'>
<h3 class='panel-title'><i class='ion-bag'></i> $AGREEMENT_NAME</h3>
</div>
<div class='panel-body'>
<p><abbr title='Contrat de prix : $CREPTN'><button type='button' id='selected-agreement' class='btn btn-info find-customer-accounts' value='$CREPTN _ $AGREEMENT_NAME _ $AGREEMENT_ROUTE'>$CUSTNO</button></abbr></p>
<p>$LAST_ORDER</p>
<p><code>Client:</code> $CNAME</p>
<p><code>Adresse:</code> $CADD2</p>
<p><code>Téléphone:</code>($CDAREA) $CDTELN</p>
<p><code>Ville:</code> $CTYPRV</p>
<p><code>Code postal:</code> $CPOSTZP</p>
</div>
</div>";


}
echo '<script>irep_theme();notify_pending_order();</script>'; //launch notify_pending_order(reside inside core.js)

$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::client-orders-history */
/* Pull out orders history for a given client */

/* origin :: ui-handler.js */
/* event handler :: #client-orders-history */
/* event handler :: #back-to-customer */

/* dependancy to ui-handler.php - display::client-orders-history */
/*Display the main NAV bar : lets you go back to query::customer-search */
////////////////////////////////////////////////////////////

if($query === 'client-orders-history'){

	$param = $client_num;

	echo ' <div class="bs-example"><table class="table table-striped">';
  echo '<thead><tr><th>PO# Commande</th><th>PO# Fournisseur</th><th>Date</th><th>PO# iREP</th><th>Caisse(s)</th><th>Montant</th><th>Client</th><th>Route</th><th>Représentant</th><th>Statut</th></tr></thead><tbody>';

 //Fetch all orders for a given client number with 2 years interval from current date
 ($stmt = $db->prepare('select orders.date,orders.po,orders.custno,clients.CSVIA,orders.quantity,orders.amount,orders.rep_name,orders.status,orders.order_num_1,orders.po_supplier
 											 from orders
 											 LEFT JOIN `clients` on orders.custno = clients.CUSTNO where orders.custno LIKE ? AND orders.date > NOW() - INTERVAL 2 YEAR
 											 ORDER BY date DESC LIMIT 0, 5000'))
 		 || fail('MySQL prepare', $db->error);
 $stmt->bind_param('s', $param)
 		 || fail('MySQL bind_param', $db->error);
 $stmt->execute()
 		 || fail('MySQL execute', $db->error);
 $stmt->bind_result($date,$po,$custno,$CSVIA,$quantity,$amount,$rep_name,$status,$order_num_1,$po_supplier)
 		 || fail('MySQL bind_result', $db->error);

 	while($stmt->fetch()){

        $amount = round($amount,2);

        //Get our $base_url from url_handler();
        //url_handler(); reside inside conf.php
        $base_url = url_handler();

    //If status  is SET to Nouveau
    if ($status =='Nouveau') {
         if($order_num_1 == 0){$order_num_1 ='';}
         if($po_supplier == 0){$po_supplier ='';}
         $disabled_order = 'disabled';
         $disabled_po ='disabled';
         $strike_open ='';$strike_close ='';
         $style = 'style="background-color: skyblue"';
    }

    //If status is SET to Traitement en attente
    if ($status =='Traitement en attente'){
        if($order_num_1 == 0){$order_num_1 ='';}
        if($po_supplier == 0){$po_supplier ='';}
        $disabled_order = 'disabled';
        $disabled_po ='disabled';
        $strike_open ='';$strike_close ='';
        $style = 'style="background-color: yellow"';
        $status ='Traitement<br>en attente'; //Modify status display to save space
      }

      //If status is SET to Attente marchandises
      if ($status =='Attente marchandises'){
          if($order_num_1 == 0){$order_num_1 ='';}
          $disabled_order = 'disabled';
          $disabled_po ='disabled';
          $strike_open ='';$strike_close ='';
          $style = 'style="background-color: orange"';
          $status ='Attente<br>marchandises'; //Modify status display to save space
        }

        //if order_num_1 is NOT set to 0 then disable the input field and change the button display to "ion-edit"
       if ($order_num_1 != 0 && $status =='Terminé'){
            if($po_supplier == 0){$po_supplier ='';}
            $disabled_order = 'disabled';
            $disabled_po ='disabled';
            $strike_open ='';$strike_close ='';
            $style = 'style="background-color: greenyellow"';
         }

         //If status is SET to Annulé
         if ($status =='Annulé'){
              if($order_num_1 == 0){$order_num_1 ='';}
              if($po_supplier == 0){$po_supplier ='';}
              $disabled_order = 'disabled';
              $disabled_po ='disabled';
              $strike_open ='<strike>';$strike_close ='</strike>';
              $style = 'style="background-color: rgba(255, 61, 61, 0.72)"';
           }

    $date_array = explode(" ", $date); //Lets explode $date and split year/month/day from the time
    #Split $date_array[0] so we can retrieve the order year folder with $date_array[0]
    list($year_folder, $month, $day) = split('-', $date_array[0]);

    $order_num_1    = isset($order_num_1) ? $order_num_1 : '';#Define $order_num_1 if it has not been set
    $disabled_po    = isset($disabled_po) ? $disabled_po : '';#Define $disabled_po if it has not been set
    $disabled_order = isset($disabled_order) ? $disabled_order : '';#Define $disabled_order if it has not been set
    $po_supplier    = isset($po_supplier) ? $po_supplier : '';#Define $po_supplier if it has not been set


echo"
<tr>
<td>
<input type='text' id='order_num_1' class='$po' MAXLENGTH='7' value='$order_num_1' $style  $disabled_order/>
</td>
<td>
<input type='text' id='supplier_po' class='$po supplier_po' MAXLENGTH='7' value='$po_supplier' $style $disabled_po/>
</td>
<td>$date</td>
<td>$strike_open<code><a target='_blank' href='$base_url/orders/$year_folder/$po.pdf'>$po</a></code>$strike_close</td>
<td><code>$quantity</code></td>
<td><code>$$amount</code></td>
<td><code>$custno</code></td>
<td><code>$CSVIA</code></td>
<td><code>$rep_name</code></td>
<td><code>$status</code></td></tr>

  ";
}

 echo '</tbody></table></div>';

 $stmt->close();
 $db->close();


}


////////////////////////////////////////////////////////////
/* query::addfav */
/* Add new favorites to database */
/* New favorites can also be added from admin panel */
////////////////////////////////////////////////////////////

if($query === 'addfav'){

#Please note that this function is both used via the Admin panel AND at the user level on the selected-agreement page on a day to day basis

#Check if addfav is sent from admin panel or directly from the user
#If it is not sent from the admin panel then read email value from his own session else GET from POST

if ($admin_panel !='yes'){
$email = $_SESSION['alive'][2]; //lets use the user email, because we do not want to read from the email input by the Admin (we are not reading from POST)
}

//If email does not match the criteria below, exit and notify
//Whitelisted domains are listed inside conf.php
if (!preg_match($whitelisted_domains, $email)){

    fail('Email invalide!');
}

  //MAKE SURE THE EMAIL ADDRESS DOESN'T HAVE ANY NASTY STUFF IN IT
$pattern = "/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i";
 if (preg_match($pattern, trim(strip_tags($email)))) {
    $clean_email = trim(strip_tags($email));
    } else {
    fail('Email invalide!');
    }

if ($favname != '' && $ulink !=''){
    #Storing user favorite inside the database
	($stmt = $db->prepare('insert into favorites (email,ulink,favname) values (?,?,?)'))
		|| fail('MySQL prepare', $db->error);
	$stmt->bind_param('sss', $email,$ulink,$favname)
		|| fail('MySQL bind_param', $db->error);
	$stmt->execute()
        || fail('MySQL execute', $db->error);

        if($admin_panel =='yes'){

          $notification = '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Ajout du favori '.$favname.' pour l\\\'usager '.$email.' terminée!</p></center>';

          echo "<script>iREPNotify('$notification','info');</script>";
        }

$stmt->close();
$db->close();

 }
}


////////////////////////////////////////////////////////////
/* query::favlookup */
/* Display user favorites */
////////////////////////////////////////////////////////////

if($query === 'favlookup'){

$email = $_SESSION['alive'][2]; //Lets retrieve the user email

echo "<div class='col-ff-6'><table class='table table-striped'><thead><tr><th>Favoris<i class='ion-android-star-outline'></i></th></thead><tbody>";


    #Gather all favorites tied to this email
	 ($stmt = $db->prepare('select ID,ulink,favname from favorites where email=? ORDER BY favname'))
	       || fail('MySQL prepare', $db->error);
        $stmt->bind_param('s', $email)
	       || fail('MySQL bind_param', $db->error);
	$stmt->execute()
	       || fail('MySQL execute', $db->error);
	$stmt->bind_result($ID,$ulink,$favname)
	       || fail('MySQL bind_result', $db->error);

        while($stmt->fetch()){

    echo"

    <tr><th><abbr title='fav uid'><sub>#$ID</sub></abbr><td><span class='step size-48'>&nbsp;<i class='ion-folder' id='ulink' name='$ulink'></i></span>&nbsp; $favname<i class='ion-minus-circled remove-fav' id='deletefav' name='$ID'></i></span></td></th></tr>

    ";

   }
     echo "</tbody></table></div>";

$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::selected-agreement */
/* Display products based on agreement type  */
/* & Let the user select the QTY for each products */
/* & Delete temp html orders coming back from query::create-order */

/* origin :: ui-handler.js */
/* event handler :: #selected-agreement */

/* origin :: ui-handler.js */
/* event handler :: #cancel-back-to-agreement */

/* dependancy to ui-handler.php - display::agreement-nav */
/* Display the main NAV bar : lets you go back to query::find-customer-accounts */
/* Display the agreement history inside the main NAV bar */
////////////////////////////////////////////////////////////

if($query === 'selected-agreement'){


    //if this flag is enabled it means the user canceled his current order sheet while reviewing the html version,
   //therefor this temp html order must be deleted from disk!
    if ($delete_flag =='delete'){

        unlink('/var/www/irep/orders/'.$PO.'.html'); //remove the HTML file (order sheet)
    }


    echo "
    <div class='col-sm-8 form-group noselect' id='top-search'>
    <div class='input-group'>
    <div class='input-group-addon'><i class='ion-search'></i></div>
    <input type='number' class='search form-control' id='product-search' name='product-search'  placeholder='Informations du produits...'/>
    </div>
    <button class='filter' onclick='showSelected()'>Visualiser</button>&nbsp;
  	<button class='search_type' onclick='search_Type()'>Recherche par Numéro</button>
    <code style='float:right;'>Total: <span id='total_qty' class='noselect'>0</span>
    <i class='ion-cube'></i>
    <code style='float:right;'>Total: <span id='total_price' class='noselect'>0</span>
    <i class='ion-social-usd'></i></code></code>
    </div>
    <li id='comments'><textarea maxlength='200' id='comments' placeholder='Ajouter un commentaire...'></textarea></li>
    <ul class='list noselect'>";


    //Products/Agreements filters
    $ICODE1 = 'Y';    //This filter indicate a discontinued products from the products DB (products)
		$ISTAT  = 'S';   //This filter indicate a suspended products from the products DB (products)
		$ADSTAT = 'S';  //This filter indicate a suspended products in a contract price
	  $AHSTAT = 'S'; //This filter indicate a suspended contract agreement

    //if agreement = 48858 (ARD) then set search_type to text -- by default search type is set to numbner
    if ($agreement == 48858){

        echo "<script>search_Type();</script>";

    }



       //HOW iREP IS HANDLING THESE FILTERS???

      //This interpretation of filters is not yet implemented and adopted by iREP-SRV  (THIS IS NOT LIVE AS OF 10/22/15)
			#iREP will NOT display discontinued products from the products DB (ICODE1)
			#iREP will NOT diplay products which are suspended inside the products DB AND contract price (ISTAT/ADSTAT)
			#iREP will NOT display products IF the contract price is suspended (AHSTAT)
			#iREP WILL display products which are ONLY suspended inside the products DB OR contract price NOT BOTH, this is meant to inform that this product has been TEMPORARLY suspended (ISTAT/ADSTAT)


      //UPDATE 10/22/15 since we do not have an official policy on how to handle these status! (LIVE VERSION)
			#iREP will NOT diplay SUSPENDED PRODUCTS either from the products DB or contract price
			#iREP will NOT diplay products which are suspended inside the products DB AND contract price (ISTAT/ADSTAT)
			#iREP will NOT display products IF the contract price is suspended (AHSTAT)

     #Gather all products related to this contract number
	 ($stmt = $db->prepare('SELECT DISTINCT agdet.ADITEM, agdet.ADSTAT, agdet.ADPONO, agdet.ADUPRX, agdet.APRUOM, products.SCC, products.UPC, products.TMP_PLU, products.PLU, products.IFDESC, products.IEDESC,products.ISTAT, products.ISUBNO
                            FROM agdet
                            LEFT JOIN products on agdet.ADITEM = products.ITEMNO
                            LEFT JOIN aghdr    on agdet.AHNUM  = aghdr.AHNUM
                            WHERE agdet.AHCUST =? AND products.ICODE1 !=? AND products.ISTAT !=? AND agdet.ADSTAT !=? AND aghdr.AHSTAT !=? ORDER BY agdet.ADITEM ASC LIMIT 0, 3000'))
	       || fail('MySQL prepare', $db->error);
        $stmt->bind_param('issss', $agreement,$ICODE1,$ISTAT,$ADSTAT,$AHSTAT)
	       || fail('MySQL bind_param', $db->error);
	$stmt->execute()
	       || fail('MySQL execute', $db->error);
	$stmt->bind_result($ADITEM,$ADSTAT,$ADPONO,$ADUPRX,$APRUOM,$SCC,$UPC,$TMP_PLU,$PLU,$IFDESC,$IEDESC,$ISTAT,$ISUBNO)
	       || fail('MySQL bind_result', $db->error);

        while($stmt->fetch()){


             //trimming white spaces
             $IFDESC  = trim($IFDESC);
						 $IEDESC  = trim($IEDESC);
             $ADITEM  = trim($ADITEM);
						 $ADPONO  = trim($ADPONO);
						 $ADUPRX  = trim($ADUPRX);
						 $APRUOM  = trim($APRUOM);
			       $SCC     = trim($SCC);
			       $UPC     = trim($UPC);
						 $TMP_PLU = trim($TMP_PLU);
						 $PLU     = trim($PLU);
			       $ISUBNO  = trim($ISUBNO);


            //Format our price to 2 decimal so a price of $64/CS will display $64.00/CS
            $ADUPRX =  number_format((float)$ADUPRX, 2, '.', '');

             //List all unwanted items here...
             if ($IFDESC == 'TAXABLE'  ){ $ADITEM = 'hidden';}
             if ($IFDESC == 'XXXX'  ){ $ADITEM = 'hidden';}
						 //Search for french description and if its not available switch to english
						 //If no description is found in french/english then display "Aucune description trouvée"
						 if ($IFDESC ==''){$IFDESC = $IEDESC;}
             if ($IFDESC =='' && $IEDESC ==''){ $IFDESC = 'Aucune description trouvée';}


			//Check for substitution code if its not empty display $ISUBNO
			if ($ISUBNO ==''){$ISUBNO = "";}
			  else {$ISUBNO = "&nbsp;<strong><samp class='substitute'><code>Code de substitution : $ISUBNO</code></samp></strong>";}
			//Check for SCC if its not empty display $SCC
			if ($SCC ==''){$SCC = "";}
			  else {$SCC = "&nbsp;<strong><samp class='scc'><code>SCC : $SCC</i></code></samp></strong>";}
			//Check for UPC if its not empty display $UPC
			if ($UPC ==''){$UPC = "";}
			  else {$UPC = "&nbsp;<strong><samp class='upc'><code>UPC : $UPC</i></code></samp></strong>";}
				//Check for TMP_PLU if its not empty display $TMP_PLU
			if ($TMP_PLU ==''){$TMP_PLU = "";}
				else {$TMP_PLU = "&nbsp;<strong><samp class='tmpplu'><code>PLU TEMP : $TMP_PLU</i></code></samp></strong>";}
				//Check for PLU if its not empty display $PLU
			if ($PLU ==''){$PLU = "";}
				else {$PLU = "&nbsp;<strong><samp class='plu'><code>PLU : $PLU</i></code></samp></strong>";}
				//Check for client code if its not empty display $ADPONO
			if ($ADPONO ==''){$ADPONO = "";}
				else {$ADPONO = "&nbsp;<strong><samp class='custcode'><code>Code client : $ADPONO</i></code></samp></strong>";}

            //If product (products DB NOT AGDET) is suspended then add suspended flag and disable elements
            if ($ISTAT =='S' OR $ADSTAT =='S'){

    //We are using list.js to search our data, we can currently display 3k products (which SUCKS performance wise) cleaning will be done on each agreement
    //Always adjust the number of display items inside list.js based on the MAXIMUM QTY of all available agreement
    print_r ("
    <li class='$ADITEM' id='notselected' style='display:none'>
    <h3><i class='item'>$ADITEM</i> <span class='step size-24' id='itemchecked$ADITEM'><i class='ion-android-checkbox-outline-blank'></i></span>
	  &nbsp;<i class='description bg-suspended' style='font-size:14px;'>Produit suspendu</i></h3>
    <p><samp class='description'>$IFDESC<br>$ISUBNO&nbsp;$SCC&nbsp;$UPC&nbsp;$PLU&nbsp;$TMP_PLU&nbsp;$ADPONO</samp></p>
   </li>");

        }
            else {

print_r ("
<li class='$ADITEM' id='notselected' style='display:none'>
    <h3><i class='item'>$ADITEM</i> <span class='step size-24' id='itemchecked$ADITEM'><i class='ion-android-checkbox-outline-blank'></i></span>
		&nbsp;<i class='$ADITEM price' id='notselected'>$$ADUPRX/$APRUOM</i>
    <i style='float:right;'>
    <code><span id='$ADITEM' value='0' class='qty'>0</span></code>
    <button class='addremove' onclick=\"remove_item('$ADITEM');\"><i class='noselect ion-android-remove-circle step size-32'></i></button>
    <button class='addremove' onclick=\"add_item('$ADITEM');\"><i class='noselect ion-android-add-circle step size-32'></i></button>
    </i>
    </h3>
    <p><samp class='description'>$IFDESC<br>$SCC&nbsp;$UPC&nbsp;$PLU&nbsp;$TMP_PLU&nbsp;$ADPONO</samp>
    <i style='float:right;'><input type='range' min='0' max='1000' value='0' step='1' oninput=\"showValue(this.value,'$ADITEM');\" /></i>
    </p>
   </li>");

    }
   }

$stmt->close();
$db->close();


echo " <script type='text/javascript'>

    //Enable search options
      var options = {

        valueNames: ['item', 'description', 'scc', 'upc', 'plu', 'tmpplu', 'custcode']
    };

    var productList = new List('data', options); //Create full product list (item cap is set 3k)

	console.log('Found '+ productList.size() +' products'); //display total items in console



	//Display items on search or else keep everything at display:none

	$('#product-search').on('change', function() {

    if (productList.searched == true) { $( 'li' ).filter('#notselected').show(); }
        order_flag = 0; //Reset order_flag to 0 so the user cannot hit order right away, he must visualize first!
    $('.filter').css('background-color', '#28a8e0');

    });


//disable doubletapzoom from elements
$('button#add').nodoubletapzoom();
$('button#remove').nodoubletapzoom();
$(document).nodoubletapzoom();
resume_order();
</script>";
}


////////////////////////////////////////////////////////////
/* query::create-order */
/* Generate the order sheet with all selected product */
/* Let the user review the order before sending it via email  */

/* origin :: q-handler.js */
/* event handler :: #create-order */

/* dependancy to ui-handler.php - display::create-order-nav */
/* Display the main NAV bar : lets you go back to query::selected-agreement */
////////////////////////////////////////////////////////////

if($query === 'create-order'){

//First of all lets generate our HTML order sheet with all the needed variables
date_default_timezone_set("America/New_York");
$date_time = date("Y-m-d H:i:s");  # MONTH/DAY/YEAR

$user_name = $_SESSION['alive'][1];  //user name
$user_email = $_SESSION['alive'][2]; //user email
$count_row = 0; //This var is used to count rows for applying the $border_style variable
$list ='';

//lets create our iREP PO# based on client_num, $user_name  and $date_time
$subject = array('-',':');
$current_time = str_replace($subject, "",$date_time);   //Lets keep digits ONLY
$current_time = str_replace(' ','',$current_time);      //Trim remaining whitespace
preg_match_all('/\d{12}$/',$current_time,$mydate_time); //Match only 12 digits starting from the end of the string

    $mydate_time = implode('', $mydate_time[0]);


		function stripAccents($str) {
		    return strtr(utf8_decode($str), utf8_decode('àáâãäçèéêëìíîïñòóôõöùúûüýÿÀÁÂÃÄÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝ'), 'aaaaaceeeeiiiinooooouuuuyyAAAAACEEEEIIIINOOOOOUUUUY');
		}

		$user_name = stripAccents($user_name); #Remove all accent from $user_name
    $string = explode(" ", $user_name);
    $expr = '/^[a-z]/i'; //Get First letter of user first name (Alexandre) = A3
    preg_match_all($expr, $string[0], $first_name);
    $first_name = implode('', $first_name[0]); //Join Array elements

    $expr = '/^[a-z]{4}/i'; //Get first 4 letters of user last name (Moreau) = MORE
    preg_match_all($expr, $string[1], $last_name);
    $last_name = implode('', $last_name[0]); //Join Array elements
    $last_name = strtoupper($last_name);    //UPPERCASE the string

    $user_id = $first_name.$last_name; //Append both string

    $PO = $client_num.'-'.$mydate_time.'-'.$user_id; //Assemble all the pieces to create our iREP PO#

    $comment = htmlspecialchars($comment, ENT_QUOTES); #Convert special characters to HTML entities

//Gather client information
($stmt = $db->prepare('select CUSTNO,CNAME,CADD2,CTYPRV,CPOSTZP,CDAREA,CDTELN,CSVIA from clients where CUSTNO=?'))
	       || fail('MySQL prepare', $db->error);
        $stmt->bind_param('s', $client_num)
	       || fail('MySQL bind_param', $db->error);
	    $stmt->execute()
	       || fail('MySQL execute', $db->error);
	    $stmt->bind_result($CUSTNO,$CNAME,$CADD2,$CTYPRV,$CPOSTZP,$CDAREA,$CDTELN,$CSVIA)
	       || fail('MySQL bind_result', $db->error);
	    if (!$stmt->fetch() && $db->errno)
		        fail('MySQL fetch', $db->error);
        $stmt->fetch();

       $CDTELN = substr_replace($CDTELN, '-', 3, 0); //Add dash to phone number ie; 3496422 -> 349-6422


//Count each arrays of the order and fail if they do not have the same count
//This error can happen when there's a duplicate product for a given contract price
 if (count($products) != count($unit_qty) || count($products) != count($unit_price)){

   echo "<script>$('button#send-order').prop('disabled', true);</script>";
   fail("Anomalie lors de la lecture de la commande : invalid array count!");

  }
  else {

 //Iterate through all selected products from the order and populate the order sheet
 //We always get matching count arrays so we can safely iterate
 for($i=0, $count = count($products);$i<$count;$i++) {

     ($stmt = $db->prepare('select IFDESC,IEDESC from products where ITEMNO=?')) #Pull product description
	       || fail('MySQL prepare', $db->error);
        $stmt->bind_param('s', $products[$i])
	       || fail('MySQL bind_param', $db->error);
	    $stmt->execute()
	       || fail('MySQL execute', $db->error);
	    $stmt->bind_result($IFDESC,$IEDESC)
	       || fail('MySQL bind_result', $db->error);
	    if (!$stmt->fetch() && $db->errno)
		        fail('MySQL fetch', $db->error);
        $stmt->fetch();

     //trim whitespace
     $IFDESC = trim($IFDESC);
     $IEDESC = trim($IEDESC);
     //Assign $description to $IFDESC by default
     $description = $IFDESC;
     //Search for french description and if its not available switch to english
     //If no description is found in french/english then display "Aucune description trouvée"
     if ($IFDESC ==''){$description = $IEDESC;}
      if ($IFDESC =='' && $IEDESC ==''){ $description = 'Aucune description trouvée';}

     //Calculate unit_qty*unit_price to get total_price_per_item
     $total_price_per_item = $unit_qty[$i] * $unit_price[$i];
     //Format our total_price_per_item to 2 decimal so a price of $64/CS will display $64.00/CS
     $total_price_per_item =  number_format((float)$total_price_per_item, 2, '.', '');

     $border_style =''; //reset $border_syle
     ++$count_row;
	//Every 10 row inject $border_style into <tr> element (this is useful while entering orders into AS400 because a page will only accept 10 items before you have to switch page)
	if ( $count_row == 10) { $border_style ='style="border-bottom:solid;"'; $count_row = 0;}

    $list .= "<tr class='item-row' $border_style>
    <td class='item-name'><div>".$products[$i]."</div></td>
    <td class='qty'><div>".$unit_qty[$i]."</div></td>
    <td class='unit-price'><div>$".$unit_price[$i]."</div></td>
    <td class='total-price'><div>$".$total_price_per_item."</div></td>
    <td class='description'><div>".$description."</div></td></tr>";

 }

//Generate the HTML
$HTML="/var/www/irep/orders/$PO.html";
$handlehtml=fopen($HTML, 'wb') or fail('Erreur lors de l\\\'ouverture du fichier HTML!');
$create_order ="

<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>
<html xmlns='http://www.w3.org/1999/xhtml'>

<head>
	<meta http-equiv='Content-Type' content='text/html; charset=UTF-8' />

	<title>$PO</title>

	<link rel='stylesheet' type='text/css' href='../css/order.min.css?v2.1' />

</head>

<body id='order'>

	<div id='page-wrap'>

		<div id='identity'>

            <div id='customer-title'><b>$CUSTNO</b><br/>$CNAME<br/>$CADD2<br/>$CTYPRV<br/>$CPOSTZP<br/>Tel.($CDAREA)$CDTELN</div>


            <div id='offre'>
              Bon de commande : <b>$agr_name</b>
            </div>

		</div>

		<div style='clear:both'></div>

		<div id='customer'>

            <table id='meta'>
						<tbody>
              <tr>
                    <td class='meta-head'>Représentant</td>
                    <td><div>$user_name</div></td>
                </tr>

                 <tr>
                    <td class='meta-head'>Route</td>
                    <td><div>$CSVIA</div></td>
                </tr>

                <tr>
                    <td class='meta-head'>Commande #</td>
                    <td><div id='PO'>$PO</div></td>
                </tr>
                <tr>

                    <td class='meta-head'>Date</td>
                    <td><div id='date'>$date_time</div></td>
                </tr>
            </tbody>
            </table>

		</div>

		<table id='items'>
		<thead>
		  <tr>

      <th>Produit(s)</th>
          <th>Caisse(s)</th>
          <th>Coût Unitaire</th>
          <th>Coût Total</th>
      <th>Description</th>

		  </tr>
		  </thead>
          <tbody>

          $list

		  <tr>
          <td  class='total-value balance'>Total</td>
          <td  class='total'><b>$total_qty[0]</b></td>
          <td  class='total'><b></b></td>
          <td  class='total'><b>$$total_price[0]</b></td>
		      <td  class='comments'><b>$comment</b></td>
		  </tr>
		</tbody>
		</table>

		<div id='terms'>
		  <h5>Les Aliments Johnvince inc.</h5>
		</div>
	 <center>1630 Rue Eiffel Boucherville, Québec J4B 7W1 <br/> Tel.(450)655-4764 - Fax.(1-800)493-3277</center>
	</div>

</body>

</html>
";

      //Write order sheet to disk <span class='vertical-text'>$PO</span>
			//(Windows - "IIS_IUSRS" must have the WRITE PERMISSION ON FOLDER ORDERS!)
			//(Linux - "www-data" must have the WRITE PERMISSION ON FOLDER ORDERS!)
    if (fwrite($handlehtml, $create_order) === FALSE) {

        fail("La création du bon de commande $PO à rencontré une erreur (create-order) - missing write permission");

    }

       fclose($handlehtml); //Close the file

echo  '<center><i class="ion-email step size-48"></i><input class="login-input"  type="email" id="cc_email"  placeholder="+ destinataire..."/></center>';
echo $create_order; //Display order sheet to user


$stmt->close();
$db->close();

   }
 }


////////////////////////////////////////////////////////////
/* query::send-order*/
/* Create a pdf file from the order sheet */
/* & Save the order sheet with all selected products to disk */
/* If the agreement route_flag is set to GP1070 then store this order
/* into a separate MYSQL queue for further processing at a later stage
/* so this order can be uploaded to AS400 automatically
/* then  send the order via email */

/* origin :: q-handler.js */
/* event handler :: #send-order */

/* dependancy to ui-handler.php - display::send-order-nav */
/* Display the main NAV bar : lets you go back to query::find-customer-accounts */
////////////////////////////////////////////////////////////

if($query === 'send-order'){

//For more information visit : https://github.com/PHPMailer/PHPMailer
require_once('../PHPMailer/PHPMailerAutoload.php');

/*New year folders are now created by Janitor.php as of 03/30/17*/

//Create PDF from HTML order sheet and save to disk
//(Windows - "IIS_IUSRS" must have the WRITE PERMISSION ON FOLDER ORDERS!)
//(Linux - "www-data" must have the WRITE PERMISSION ON FOLDER ORDERS!)
/*
PhantomJS -- this solution is no longer used by iREP as of 12/09/15 - The new solution is now wkhtmltopdf (http://wkhtmltopdf.org/usage/wkhtmltopdf.txt)
shell_exec('/var/www/irep/lib/logic/bin/phantomjs /var/www/irep/lib/logic/bin/rasterize.js http://192.168.200.16/orders/'.$PO.'.html /var/www/irep/orders/'.$PO.'.pdf "21.60cm*27.94cm"');
*/

//Lets call wkhtmltopdf and convert the HTML order to PDF
exec('wkhtmltopdf -s Letter --header-font-size 10 --header-spacing 1 --header-right "[doctitle] - [page] / [toPage]" /var/www/irep/orders/'.$PO.'.html /var/www/irep/orders/'.$year_folder.'/'.$PO.'.pdf',$output,$error);

//Catch $error if error code = 1 (Exit with code 1 due to network error: ContentNotFoundError)
if ($error == 1){
  unlink('/var/www/irep/orders/'.$PO.'.html'); //remove the HTML version because we no longer need it
	fail('Impossible d\\\'effectuer la convertion du fichier HTML -> PDF');
	unset($error); //unset the array

}
    else{

        //OK convertion worked we now have a PDF file...
     unlink('/var/www/irep/orders/'.$PO.'.html'); //remove the HTML version because we no longer need it



        //Send email via PHPMailer to expedition desk and BCC rep
        $mail = new PHPMailer;
        $mail->isSMTP();
        $mail->CharSet = 'UTF-8';
        $mail->Host = '192.168.200.11;10.1.1.15'; #Internal relays + fail over
		    $mail->SMTPAuth = false;
		    $mail->Port = 25;
	      #$mail->SMTPDebug  = 1;
		    $mail->Debugoutput = 'html';


        //Get our $base_url from url_handler();
        //url_handler(); reside inside conf.php
        $base_url = url_handler();
        $url = "$base_url/orders/$year_folder/$PO.pdf"; //create url to PDF
        $user_name = $_SESSION['alive'][1];  //user name
        $user_email = $_SESSION['alive'][2]; //user email

        $mail->From = $user_email;
        $mail->FromName = $user_name;
        $mail->addAddress('amoreau@johnvince.com', 'Alexandre Moreau');// Send email to expedition@johnvince.com (switched email to mine for dev mode)
        $mail->addReplyTo($user_email, $user_name);
        $mail->addBCC($user_email);

        if ($CC !=''){

           //MAKE SURE THE CC EMAIL ADDRESS DOESN'T HAVE ANY NASTY STUFF IN IT
         $pattern = "/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i";
         if (preg_match($pattern, trim(strip_tags($CC)))) {
         $clean_CC = trim(strip_tags($CC));
         $mail->addCC($clean_CC);  //add CC to email
         } else {
           fail('CC Email invalide!');
          }
        }

        //If user domain origin is arachides-depot then addBCC -> mseyer@arachides-depot.ca
        //In a future update this must be filtered to only send the order if they are pre-booking!
        if (preg_match('/^[a-zA-Z.-]+@arachides-depot/', $user_email)){

            $mail->addBCC('amoreau@johnvince.com', 'Alexandre Moreau'); // Send email to mseyer@arachides-depot.ca (switched email to mine for dev mode)
          }

          //If agreement number is equal to 62690 (ARD-AURORA) then
          //addBCC -> nperron@johnvince.com
          //This is needed to send a copy of all Aurora orders from Arachides-Dépôt users to Nathalie Perron
          //This way she can create a real AS400 PO# Supplier then forward the order to Aurora by email
          if (preg_match('/(62690)/', $agreement)){

              $mail->addBCC('amoreau@johnvince.com', 'Alexandre Moreau'); // Send email to nperron@johnvince.com (switched email to mine for dev mode)

            }

        $mail->addAttachment('../../orders/'.$year_folder.'/'.$PO.'.pdf'); // Add attachments
        $mail->isHTML(true); // Set email format to HTML

        $mail->Subject = 'iREP - Nouveau bon de commande '.$PO.'';
        $mail->Body    = 'Veuillez consulter le lien suivant pour visionner la commande : '.$url.'<br>Ou bien simplement t&eacute;l&eacute;charger le fichier PDF attach&eacute; au courriel.  ';

        if(!$mail->send()) {

		        //OK something wrong happened, lets delete the pdf file..
            unlink('/var/www/irep/orders/'.$year_folder.'/'.$PO.'.pdf'); //remove the PDF file since we have to start over...
		        echo 'Mailer Error: ' . $mail->ErrorInfo;
		        fail('Erreur pendant l\\\'envoie du bon de commande!');

        }
        else {

             $mail_sent ='yes'; #we are using this flag to keep track of our progress, this means nothing went wrong while sending out the email


             //If this agreement is using the route_flag GP1070 then a create valid order complying with GP1070 specs
             if ($agr_route ==='GP1070'){

              require_once 'gp1070.php';
              //Lets store the order inside our gp1070_queue
              gp1070_queue($db,$PO,$order_date,$client_num,$products,$unit_qty,$unit_price,$comment,$user_email);

             }


            //Lets log the transaction into our database...

            $status ='Nouveau'; # This is the default status because this is a NEW order!

            //If the orders is sent from 62690 (ARD-AURORA) then set default status to HOLD
            //In the future  if we keep doing more cross-docking delivery then we can intercept new contract price and process it this way
            if (preg_match('/(62690)/', $agreement)){

                $status ='Traitement en attente';

              }

	      ($stmt = $db->prepare('insert into orders (date,po,custno,quantity,amount,rep_name,rep_email,status) values (?,?,?,?,?,?,?,?)'))
		           || fail('MySQL prepare #1 - LOG TRANSACTION', $db->error);
	       $stmt->bind_param('sssidsss', $order_date,$PO,$client_num,$total_qty,$total_price,$user_name,$user_email,$status)
		           || fail('MySQL bind_param #1 - LOG TRANSACTION', $db->error);
	      if (!$stmt->execute()) {
			  if ($db->errno === 1062 /* ER_DUP_ENTRY */){
			    //OK something wrong happened, lets delete the pdf file..
               unlink('/var/www/irep/orders/'.$year_folder.'/'.$PO.'.pdf'); //remove the PDF file since we have to start over...
				       fail('erreur lors de la transaction vers la base de données #1');
               $stmt->close();
               $db->close();
             }

			    else {
			       //OK something wrong happened, lets delete the pdf file..
                 unlink('/var/www/irep/orders/'.$year_folder.'/'.$PO.'.pdf'); //remove the PDF file since we have to start over...
			           fail('MySQL execute #1 - LOG TRANSACTION', $db->error);
                 $stmt->close();
                 $db->close();
		      }

	      }

            /*
                Lets add a LAST_ORDER date and LAST_PO to our clients database
                We are using this for reports based on last order date
            */

         $last_order_date = explode(" ", $order_date); //Lets explode our order_date string into an array and use it to get the date without time

        ($stmt = $db->prepare('update clients set LAST_ORDER=?, LAST_PO=? where CUSTNO=?'))
		           || fail('MySQL prepare #2 - LAST_ORDER OR LAST_PO', $db->error);
	       $stmt->bind_param('sss', $last_order_date[0],$PO,$client_num)
		           || fail('MySQL bind_param #2 - LAST_ORDER OR LAST_PO', $db->error);
	      if (!$stmt->execute()) {

			  if ($db->errno === 1062 /* ER_DUP_ENTRY */){
				 //OK something wrong happened, lets delete the pdf file..
             unlink('/var/www/irep/orders/'.$year_folder.'/'.$PO.'.pdf'); //remove the PDF file since we have to start over...
				     fail('erreur lors de la transaction vers la base de données #2');
             $stmt->close();
             $db->close();
           }

			  else {
			    //OK something wrong happened, lets delete the pdf file..
             unlink('/var/www/irep/orders/'.$year_folder.'/'.$PO.'.pdf'); //remove the PDF file since we have to start over...
			       fail('MySQL execute #2 - LAST_ORDER OR LAST_PO', $db->error);
             $stmt->close();
             $db->close();
			  }

	    }

    }

		    $query_confirmation = $stmt->affected_rows; //Count affected rows (lets use this as a confirmation that the transaction worked all the way till this point)

		if ($query_confirmation > 0 && $mail_sent ='yes' ) {

			//Lets clear order values from our localStorage because this order is now COMPLETE & let the user know it worked!
		 //If there's a long delay before the thumbs-up it usually mean a problem with the SMTP relay OR the database query

		  echo '<center><span class="step size-48"><i class="ion-thumbsup"></i></span><br><p class="bg-primary">Le bon de commande à été envoyé avec succès!</p></center>';


      $notification = '<span class="step size-48"><i class="ion-trophy"></i></span>';
      echo "<script>iREPNotify('$notification','success');</script>";

      //Lets call clear_localStorage() (function reside inside core.js)
      echo '<script>clear_localStorage();</script>';

		}
		else
		{
			 //OK something wrong happened, lets delete the pdf file..
         unlink('/var/www/irep/orders/'.$year_folder.'/'.$PO.'.pdf'); //remove the PDF file since we have to start over...
			   fail('Veuillez vérifier avec le bureau de l\\\'expédition que votre commande est bien dans le système. (Votre commande est encore en mémoire)');


		}
           $stmt->close();
           $db->close();

   }

}


////////////////////////////////////////////////////////////
/* query::order-center */
/* Display orders by date from datepicker */
/* Mark them as finished by entering an AS400 order# */
/* Must be admin to view to view the order center */
////////////////////////////////////////////////////////////

if($query === 'order-center'){

    //If user domain origin is jacqueslemieux then filter the query for jacqueslemieux users ONLY
 		//This is to avoid displaying the full list of all of our reps to jacqueslemieux and ease the work flow
    if ($domain_origin =='@jacqueslemieux.com'){
			  $orders_filter_by_user_type = '%@jacqueslemieux.com%';
	 }

		//If user domain origin is arachides-depot then filter the query for arachides-depot users ONLY
	  //This is to avoid displaying the full list of all of our reps to arachides-depot and ease the work flow
	  if ($domain_origin =='@arachides-depot.ca'){
		    $orders_filter_by_user_type = '%@arachides-depot.ca%';
	 }

	  //If user domain origin is johnvince then apply no filter
	  if ($domain_origin =='@johnvince.com'){
		    $orders_filter_by_user_type = '%%';
	 }


	//If iREP_po is not empty AND order_num_1 is not empty AND domain origin is Johnvince proceed to update the AS400 order number/supplier po
	if ($iREP_po !='' && ($order_num_1 !='' || $po_supplier !='') && $domain_origin =='@johnvince.com') {

		//input validation - no letters allowed + MYSQL field will not accept any letters
		$pattern = "/[a-z]/";
		if (preg_match($pattern, $order_num_1)) {echo "<script>$('.menu-admin').empty();</script>"; fail('Numéro de commande invalide!'); }

    if ($order_num_1 !='' && $po_supplier !='' && $order_num_1 !=0){$status ='Terminé';}
    elseif ($order_num_1 !='' && $po_supplier =='' && $order_num_1 !=0){$status ='Terminé';}
    elseif ($order_num_1 =='' && $po_supplier !=''){$status ='Attente marchandises';}
    else {
      $status ='Nouveau';
    }

   //If store_this_po is empty (no order has been selected by cycle_this_po) then proceed to update as usual our Main order number
   //OR if an order is currently selected and $store_this_po == order_num_1 then proceeed to update as usual our Main order number
   if ($store_this_po =='empty' OR $store_this_po =='order_num_1' ) {

	 ($stmt = $db->prepare('update orders set status=?, order_num_1=?, po_supplier=? where po=?')) #update order number #1
			|| fail('MySQL prepare', $db->error);
		$stmt->bind_param('ssss', $status, $order_num_1, $po_supplier, $iREP_po)
			|| fail('MySQL bind', $db->error);
		$stmt->execute()
			|| fail('MySQL execute', $db->error);

    }

    elseif ($store_this_po =='order_num_2') {

      ($stmt = $db->prepare('update orders set order_num_2=? where po=?')) #update order number #2
         || fail('MySQL prepare', $db->error);
       $stmt->bind_param('ss', $order_num_1, $iREP_po)
         || fail('MySQL bind', $db->error);
       $stmt->execute()
         || fail('MySQL execute', $db->error);

    }

    elseif ($store_this_po =='order_num_3') {

      ($stmt = $db->prepare('update orders set order_num_3=? where po=?')) #update order number #3
         || fail('MySQL prepare', $db->error);
       $stmt->bind_param('ss', $order_num_1, $iREP_po)
         || fail('MySQL bind', $db->error);
       $stmt->execute()
         || fail('MySQL execute', $db->error);

    }

    elseif ($store_this_po =='order_num_4') {

      ($stmt = $db->prepare('update orders set order_num_4=? where po=?')) #update order number #4
         || fail('MySQL prepare', $db->error);
       $stmt->bind_param('ss', $order_num_1, $iREP_po)
         || fail('MySQL bind', $db->error);
       $stmt->execute()
         || fail('MySQL execute', $db->error);

    }

    elseif ($store_this_po =='order_num_5') {

      ($stmt = $db->prepare('update orders set order_num_5=? where po=?')) #update order number #5
         || fail('MySQL prepare', $db->error);
       $stmt->bind_param('ss', $order_num_1, $iREP_po)
         || fail('MySQL bind', $db->error);
       $stmt->execute()
         || fail('MySQL execute', $db->error);

    }

    //bypass flag = 1 (refresh with selected date from calendar - bypass flag  = 2 (refresh and use the show new orders query)
		//If the bypass flag is not used refresh_orders() will ONLY auto refresh on current todays date!
    //This refresh runs on a loop every minutes and is called from ui-handler.php #cc by refresh_orders_interval

    #Declare previous_search in case no value has been assined to it already
    $_SESSION['previous_search']  = isset($_SESSION['previous_search']) ? $_SESSION['previous_search'] : '';

		echo '<script>var previous_search ="'.$_SESSION['previous_search'].'"; refresh_orders(bypass,previous_search);</script>';

	}

	else{


     $param = "%".$OC_date."%";

     echo ' <div class="bs-example" style="margin-top:150px"><table class="table table-striped">';
     echo '<thead><tr><th>PO# Commande</th><th>PO# Fournisseur</th><th>Date</th><th>PO# iREP</th><th id="cs">Caisse(s)</th><th id="amount">Montant</th><th>Client</th><th id="Route">Route</th><th>Représentant</th><th>Statut</th></tr></thead><tbody>';


//Fetch all orders for a given date based on $OC_date
  ($stmt = $db->prepare('select orders.date,orders.po,orders.custno,clients.CSVIA,orders.quantity,orders.amount,orders.rep_name,orders.status,orders.order_num_1,orders.po_supplier
                         from orders
                         LEFT JOIN `clients` on orders.custno = clients.CUSTNO
												 where date LIKE ? AND rep_email LIKE ? ORDER BY orders.status,clients.CSVIA'))
	       || fail('MySQL prepare', $db->error);
      $stmt->bind_param('ss', $param,$orders_filter_by_user_type)
	       || fail('MySQL bind_param', $db->error);
	    $stmt->execute()
	       || fail('MySQL execute', $db->error);
	    $stmt->bind_result($date,$po,$custno,$CSVIA,$quantity,$amount,$rep_name,$status,$order_num_1,$po_supplier)
	       || fail('MySQL bind_result', $db->error);

         while($stmt->fetch()){

               $amount = round($amount,2);

               //Get our $base_url from url_handler();
               //url_handler(); reside inside conf.php
               $base_url = url_handler();

               //If status  is SET to Nouveau
               if ($status =='Nouveau') {
                   if($order_num_1 == 0){$order_num_1 ='';}
                   if($po_supplier == 0){$po_supplier ='';}
                   $disabled_order = '';
                   $disabled_po = 'disabled';
                   $button ="<i class='ion-checkmark-circled' id='$po' style='cursor:pointer;'></i>";
                   $strike_open ='';$strike_close ='';
                   $style = 'style="background-color: skyblue"';
               }

               //If status is SET to Traitement en attente
               if ($status =='Traitement en attente'){
                   if($order_num_1 == 0){$order_num_1 ='';}
                   if($po_supplier == 0){$po_supplier ='';}
                   $disabled_order = 'disabled';
                   $disabled_po = '';
                   $button = "<i class='ion-checkmark-circled' id='$po' style='cursor:pointer;'></i>";
                   $strike_open ='';$strike_close ='';
                   $style = 'style="background-color: yellow"';
                   $status ='Traitement<br>en attente'; //Modify status display to save space
                 }

                 //If status is SET to Attente marchandises
                 if ($status =='Attente marchandises'){
                     if($order_num_1 == 0){$order_num_1 ='';}
                     $disabled_order = 'disabled';
                     $disabled_po = 'disabled';
                     $button = "<i class='ion-edit' id='$po' style='cursor:pointer;'></i>";
                     $strike_open ='';$strike_close ='';
                     $style = 'style="background-color: orange"';
                     $status ='Attente<br>marchandises'; //Modify status display to save space
                   }

                   //if order_num_1 is NOT set to 0 then disable the input field and change the button display to "ion-edit"
                  if ($order_num_1 != 0 && $status =='Terminé'){
                       if($po_supplier == 0){$po_supplier ='';}
                       $disabled_order = 'disabled';
                       $disabled_po = 'disabled';
                       $button = "<i class='ion-edit' id='$po' style='cursor:pointer;'></i>";
                       $strike_open ='';$strike_close ='';
                       $style = 'style="background-color: greenyellow"';
                    }

                    //If status is SET to Annulé
                    if ($status =='Annulé'){
                         if($order_num_1 == 0){$order_num_1 ='';}
                         if($po_supplier == 0){$po_supplier ='';}
                         $disabled_order = 'disabled';
                         $disabled_po = 'disabled';
                         $button = "<i class='ion-edit' id='$po' style='cursor:pointer;'></i>";
                         $strike_open ='<strike>';$strike_close ='</strike>';
                         $style = 'style="background-color: rgba(255, 61, 61, 0.72)"';
                      }

      #Split $OC_date (Date selected by the user so we can retrieve the order year folder with $year)
      list($year_folder, $month, $day) = split('-', $OC_date);

      $order_num_1      = isset($order_num_1) ? $order_num_1 : '';#Define $order_num_1 if it has not been set
      $disabled_po    = isset($disabled_po) ? $disabled_po : '';#Define $disabled_po if it has not been set
      $disabled_order = isset($disabled_order) ? $disabled_order : '';#Define $disabled_order if it has not been set
      $po_supplier    = isset($po_supplier) ? $po_supplier : '';#Define $po_supplier if it has not been set

echo"
	  <tr>
	  <td>
	  <input type='checkbox' name='checked_order' value='$po'/>&nbsp;<input type='text' id='order_num_1' class='$po order-num-field' MAXLENGTH='7' value='$order_num_1' $style $disabled_order/><span class='step size-16'>$button</span>
	  </td>
    <td>
	  <input type='text' id='supplier_po' class='$po supplier_po' MAXLENGTH='7' value='$po_supplier' $style $disabled_po/><span class='step size-16'>$button</span>
	  </td>
    <td>$date</td>
    <td>$strike_open<code><a target='_blank' href='$base_url/orders/$year_folder/$po.pdf'>$po</a></code>$strike_close</td>
    <td id='cs'><code>$quantity</code></td>
    <td id='amount'><code>$$amount</code></td>
    <td><code>$custno</code></td>
	  <td id='Route'><code>$CSVIA</code></td>
    <td><code>$rep_name</code></td>
    <td><code>$status</code></td>
    </tr>

   ";

  }
	echo '</tbody></table></div>';
	echo '<script> var bypass = 1; count_orders();</script>';
  echo '<script>ipad_alternate_view(\'order-center\');</script>';//This will create an alternate view of the order center on the iPAD : This will nuke the following columns : Total + Route
  echo '<script>
  //This code is use for the order_num/supplier_po input field
  //Enable the use of the "enter" key
  //.off("click").on -- this is REALLY important to avoid any events duplication
  //This event will be called again in q-handler.js for future binds without "page refresh"
  $("input.order-num-field").off("click").on("click", function () {
  $("input.order-num-field").change(function(e) {
  $("i.ion-checkmark-circled").focus();//focus submit input
  $("i.ion-checkmark-circled").click();//initiate search
  })
  });

  $("input#supplier_po").off("click").on("click", function () {
  $("input#supplier_po").change(function(e) {
  $("i.ion-checkmark-circled").focus();//focus submit input
  $("i.ion-checkmark-circled").click();//initiate search
  })
  });
  </script>';
 }

$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::order-search */
/* Search the orders database by user input or search_flag */
////////////////////////////////////////////////////////////

if($query === 'order-search'){

	 //If user domain origin is jacqueslemieux then filter the query for jacqueslemieux users ONLY
	 //This is to avoid displaying the full list of all of our reps to jacqueslemieux and ease the work flow
	 if ($domain_origin =='@jacqueslemieux.com'){
			 $orders_filter_by_user_type = '%@jacqueslemieux.com%';
	 }

	 //If user domain origin is arachides-depot then filter the query for arachides-depot users ONLY
	 //This is to avoid displaying the full list of all of our reps to arachides-depot and ease the work flow
	 if ($domain_origin =='@arachides-depot.ca'){
			 $orders_filter_by_user_type = '%@arachides-depot.ca%';
	 }

	 //If user domain origin is johnvince then apply no filter
	 if ($domain_origin =='@johnvince.com'){
			 $orders_filter_by_user_type = '%%';
	 }

  $search = $db->real_escape_string($search); #Escapes special characters in a string for use in an SQL statement

  $_SESSION['previous_search'] = $search; //Store current search as previous_search, this is needed for refresh_orders();

	 $param = "%".$search."%";	//Add wildcards to our search query - default search

   if ($search =='Nouveau'){
    //Searching for orders with status new will sort them by CSVIA (route) then for each route it will display the oldest one
    $order_by_1 ='clients.CSVIA'; //When searching for new orders only we want to order by CSVIA (Route)
    $order_by_2 ='orders.date';
    $order_by_3 = 'orders.status';
    $bypass = 2; //We are using bypass 2 so we can reload the query after a refresh

   }
   else {
     //Default search will ordery by date showing the most recent entries first
     $order_by_1 ='orders.date DESC'; //default order by_1 behaviour
     $order_by_2 ='orders.status'; //default order by_2 behaviour
     $order_by_3 ='clients.CSVIA'; //default order by_3 behaviour
     $bypass =3; //default bypass after a search query will refresh the order center after a user input and reload the previous query
   }


     echo ' <div class="bs-example" style="margin-top:150px"><table class="table table-striped">';
     echo '<thead><tr><th>PO# Commande</th><th>PO# Fournisseur</th><th>Date</th><th>PO# iREP</th><th id="cs">Caisse(s)</th><th id="amount">Montant</th><th>Client</th><th id="Route">Route</th><th>Représentant</th><th>Statut</th></tr></thead><tbody>';

    //Fetch all orders for a given date based on $search
    ($stmt = $db->prepare('select orders.date,orders.po,orders.custno,clients.CSVIA,orders.quantity,orders.amount,orders.rep_name,orders.status,orders.order_num_1,orders.order_num_2,
                           orders.order_num_3,orders.order_num_4,orders.order_num_5,orders.po_supplier
                           from orders
                           LEFT JOIN `clients` on orders.custno = clients.CUSTNO
													 where orders.rep_email LIKE ? AND (orders.date LIKE ? OR orders.po LIKE ? OR orders.custno LIKE ? OR orders.rep_name LIKE ? OR orders.status LIKE ?
						               OR orders.order_num_1 LIKE ? OR orders.order_num_2 LIKE ? OR orders.order_num_3 LIKE ? OR orders.order_num_4 LIKE ? OR orders.order_num_5 LIKE ?
                           OR orders.po_supplier LIKE ? OR clients.CSVIA LIKE ?)
                           ORDER BY '.$order_by_1.', '.$order_by_2.','.$order_by_3.' LIMIT 0, 500'))
	       || fail('MySQL prepare', $db->error);
  $stmt->bind_param('sssssssssssss',$orders_filter_by_user_type,$param,$param,$param,$param,$param,$param,$param,$param,$param,$param,$param,$param)
	       || fail('MySQL bind_param', $db->error);
	$stmt->execute()
	       || fail('MySQL execute', $db->error);
	$stmt->bind_result($date,$po,$custno,$CSVIA,$quantity,$amount,$rep_name,$status,$order_num_1,$order_num_2,$order_num_3,$order_num_4,$order_num_5,$po_supplier)
	       || fail('MySQL bind_result', $db->error);

      while($stmt->fetch()){

              $amount = round($amount,2);

              //Get our $base_url from url_handler();
              //url_handler(); reside inside conf.php
              $base_url = url_handler();

          //If user search = $order_num_2 then display it in the order_num field
          if ($search == $order_num_2 && $order_num_2 != 0){

              $order_num_1 = $order_num_2;

          }

          //If user search = $order_num_3 then display it in the order_num field
          if ($search == $order_num_3 && $order_num_3 != 0){

              $order_num_1 = $order_num_3;

          }

          //If user search = $order_num_4 then display it in the order_num field
          if ($search == $order_num_4 && $order_num_4 != 0){

              $order_num_1 = $order_num_4;

          }

          //If user search = $order_num_5 then display it in the order_num field
          if ($search == $order_num_5 && $order_num_5 != 0){

              $order_num_1 = $order_num_5;

          }

          //If status  is SET to Nouveau
          if ($status =='Nouveau'){
              if($order_num_1 == 0){$order_num_1 ='';}
              if($po_supplier == 0){$po_supplier ='';}
              $disabled_order ='';
              $disabled_po = 'disabled';
              $button ="<i class='ion-checkmark-circled' id='$po' style='cursor:pointer;'></i>";
              $strike_open ='';$strike_close ='';
              $style = 'style="background-color: skyblue"';
          }

          //If status is SET to Traitement en attente
          if ($status =='Traitement en attente'){
              if($order_num_1 == 0){$order_num_1 ='';}
              if($po_supplier == 0){$po_supplier ='';}
              $disabled_order = 'disabled';
              $disabled_po = '';
              $button = "<i class='ion-checkmark-circled' id='$po' style='cursor:pointer;'></i>";
              $strike_open ='';$strike_close ='';
              $style = 'style="background-color: yellow"';
              $status ='Traitement<br>en attente'; //Modify status display to save space
            }

            //If status is SET to Attente marchandises
            if ($status =='Attente marchandises'){
                if($order_num_1 == 0){$order_num_1 ='';}
                $disabled_order = 'disabled';
                $disabled_po = 'disabled';
                $button = "<i class='ion-edit' id='$po' style='cursor:pointer;'></i>";
                $strike_open ='';$strike_close ='';
                $style = 'style="background-color: orange"';
                $status ='Attente<br>marchandises'; //Modify status display to save space
              }

              //if order_num_1 is NOT set to 0 then disable the input field and change the button display to "ion-edit"
             if ($order_num_1 != 0 && $status =='Terminé'){
                  if($po_supplier == 0){$po_supplier ='';}
                  $disabled_order = 'disabled';
                  $disabled_po = 'disabled';
                  $button = "<i class='ion-edit' id='$po' style='cursor:pointer;'></i>";
                  $strike_open ='';$strike_close ='';
                  $style = 'style="background-color: greenyellow"';
               }

               //If status is SET to Annulé
               if ($status =='Annulé'){
                    if($order_num_1 == 0){$order_num_1 ='';}
                    if($po_supplier == 0){$po_supplier ='';}
                    $disabled_order = 'disabled';
                    $disabled_po = 'disabled';
                    $button = "<i class='ion-edit' id='$po' style='cursor:pointer;'></i>";
                    $strike_open ='<strike>';$strike_close ='</strike>';
                    $style = 'style="background-color: rgba(255, 61, 61, 0.72)"';
                 }

					$date_array = explode(" ", $date); //Lets explode $date and split year/month/day from the time
					#Split $date_array[0] so we can retrieve the order year folder with $date_array[0]
					list($year_folder, $month, $day) = split('-', $date_array[0]);

          $order_num_1    = isset($order_num_1) ? $order_num_1 : '';#Define $order_num_1 if it has not been set
          $disabled_po    = isset($disabled_po) ? $disabled_po : '';#Define $disabled_po if it has not been set
          $disabled_order = isset($disabled_order) ? $disabled_order : '';#Define $disabled_order if it has not been set
          $po_supplier    = isset($po_supplier) ? $po_supplier : '';#Define $po_supplier if it has not been set

echo"
	  <tr>
	  <td>
		<input type='checkbox' name='checked_order' value='$po'/>&nbsp;<input type='text' id='order_num_1' class='$po order-num-field' MAXLENGTH='7' value='$order_num_1' $style $disabled_order/><span class='step size-16'>$button</span>
	  </td>
    <td>
    <input type='text' id='supplier_po' class='$po supplier_po' MAXLENGTH='7' value='$po_supplier' $style $disabled_po/><span class='step size-16'>$button</span>
    </td>
    <td>$date</td>
    <td>$strike_open<code><a target='_blank' href='$base_url/orders/$year_folder/$po.pdf'>$po</a></code>$strike_close</td>
    <td id='cs'><code>$quantity</code></td>
    <td id='amount'><code>$$amount</code></td>
    <td><code>$custno</code></td>
	  <td id='Route'><code>$CSVIA</code></td>
    <td><code>$rep_name</code></td>
    <td><code>$status</code></td></tr>

   ";

  }

echo '</tbody></table></div>';
echo '<script>var menu_origin = "order-center";ipad_alternate_view(menu_origin)</script>';//This will create an alternate view of the order center on the iPAD : This will nuke the following columns : Total + Route
echo '<script>
var bypass = '.$bypass.'; var previous_search ="'.$_SESSION['previous_search'].'"; count_orders();
if (typeof refresh_orders_interval != "undefined") { clearInterval(refresh_orders_interval);}

//This code is use for the order_num/supplier_po input field
//Enable the use of the "enter" key
$("input.order-num-field").on("click", function () {
$("input.order-num-field").change(function(e) {
$("i.ion-checkmark-circled").focus();//focus submit input
$("i.ion-checkmark-circled").click();//initiate search
})
});

$("input#supplier_po").on("click", function () {
$("input#supplier_po").change(function(e) {
$("i.ion-checkmark-circled").focus();//focus submit input
$("i.ion-checkmark-circled").click();//initiate search
})
});

</script>';



$stmt->close();
$db->close();

}


////////////////////////////////////////////////////////////
/* query::cancel-order */
/* Cancel all checked orders from order center */
////////////////////////////////////////////////////////////

if($query === 'cancel-order'){

	 //If user domain origin is NOT johnvince then deny access to this command
	 if ($domain_origin !='@johnvince.com'){
			 fail('Privilege insuffisant!');
   }

   if (empty($chk_orders)){

      echo "<script>$('.menu-admin').empty();</script>"; fail('Aucune commande sélectionnée!');

   }

//Retrieve and process each selected orders
foreach ($chk_orders as $cancel_this_order) {

	   $status ='Annulé';

		($stmt = $db->prepare('update orders set status=? where po=?')) #update order status to "Annulé"
		|| fail('MySQL prepare', $db->error);
	   $stmt->bind_param('ss', $status, $cancel_this_order)
		|| fail('MySQL bind', $db->error);
	   $stmt->execute()
		|| fail('MySQL execute', $db->error);

 }

  #Declare previous_search in case no value has been assined to it already
  $_SESSION['previous_search']  = isset($_SESSION['previous_search']) ? $_SESSION['previous_search'] : '';

  echo '<script>var previous_search ="'.$_SESSION['previous_search'].'"; refresh_orders(bypass,previous_search);</script>';

}


////////////////////////////////////////////////////////////
/* query::cycle-this-po */
/* origin :: q-handler.js */
/* event handler :: #cycle_this_po */
/* Retrieve extra AS400 PO# from cycle_this_po */
////////////////////////////////////////////////////////////

if($query === 'cycle-this-po'){

   //If user domain origin is NOT johnvince then deny access to this command
   if ($domain_origin !='@johnvince.com'){
       fail('Privilege insuffisant!');
   }

   if (empty($chk_orders)){

      echo "<script>$('.menu-admin').empty();</script>"; fail('Aucune commande sélectionnée!');

   }

   //Lets find the order_num_1 tied to the following po_pointer :: order_num_1
   if ($fetch_this_po =='order_num_1') {

        ($stmt = $db->prepare('select order_num_1 from orders where po=?'))
            || fail('MySQL prepare', $db->error);
         $stmt->bind_param('s', $chk_orders)
            || fail('MySQL bind_param', $db->error);
         $stmt->execute()
            || fail('MySQL execute', $db->error);
         $stmt->bind_result($fetched_po)
            || fail('MySQL bind_result', $db->error);
        if (!$stmt->fetch() && $db->errno)
               fail('MySQL fetch', $db->error);
             $stmt->fetch();

   }

   //Lets find the order_num tied to the following po_pointer :: order_num_2
   if ($fetch_this_po =='order_num_2') {

        ($stmt = $db->prepare('select order_num_2 from orders where po=?'))
            || fail('MySQL prepare', $db->error);
         $stmt->bind_param('s', $chk_orders)
            || fail('MySQL bind_param', $db->error);
         $stmt->execute()
            || fail('MySQL execute', $db->error);
         $stmt->bind_result($fetched_po)
            || fail('MySQL bind_result', $db->error);
        if (!$stmt->fetch() && $db->errno)
               fail('MySQL fetch', $db->error);
             $stmt->fetch();

   }

   //Lets find the order_num tied to the following po_pointer :: order_num_3
   if ($fetch_this_po =='order_num_3') {

        ($stmt = $db->prepare('select order_num_3 from orders where po=?'))
            || fail('MySQL prepare', $db->error);
         $stmt->bind_param('s', $chk_orders)
            || fail('MySQL bind_param', $db->error);
         $stmt->execute()
            || fail('MySQL execute', $db->error);
         $stmt->bind_result($fetched_po)
            || fail('MySQL bind_result', $db->error);
        if (!$stmt->fetch() && $db->errno)
               fail('MySQL fetch', $db->error);
             $stmt->fetch();

   }

   //Lets find the order_num tied to the following po_pointer :: order_num_4
   if ($fetch_this_po =='order_num_4') {

        ($stmt = $db->prepare('select order_num_4 from orders where po=?'))
            || fail('MySQL prepare', $db->error);
         $stmt->bind_param('s', $chk_orders)
            || fail('MySQL bind_param', $db->error);
         $stmt->execute()
            || fail('MySQL execute', $db->error);
         $stmt->bind_result($fetched_po)
            || fail('MySQL bind_result', $db->error);
        if (!$stmt->fetch() && $db->errno)
               fail('MySQL fetch', $db->error);
             $stmt->fetch();

   }

   //Lets find the order_num tied to the following po_pointer :: order_num_5
   if ($fetch_this_po =='order_num_5') {

        ($stmt = $db->prepare('select order_num_5 from orders where po=?'))
            || fail('MySQL prepare', $db->error);
         $stmt->bind_param('s', $chk_orders)
            || fail('MySQL bind_param', $db->error);
         $stmt->execute()
            || fail('MySQL execute', $db->error);
         $stmt->bind_result($fetched_po)
            || fail('MySQL bind_result', $db->error);
        if (!$stmt->fetch() && $db->errno)
               fail('MySQL fetch', $db->error);
             $stmt->fetch();

   }

   if ($fetched_po == 0){

     $fetched_po =''; //remove 0 values from display

   }

   echo $fetched_po;

}

?>
